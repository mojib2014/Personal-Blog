{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Card/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"@material-ui/core\";\nimport { CardHeader, CardMedia, CardContent, CardActions, IconButton, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport formatDate from \"../../utils/formatDate\";\nimport getReadingTime from \"../../utils/getReadingTime\";\nimport Cardheader from \"../CardHeader\";\nimport formatSlug from \"../../utils/formatSlug\";\nimport useStyles from \"./styles\";\nimport auth from \"../../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post,\n  onLike,\n  onDisLike\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({});\n  const classes = useStyles();\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, []);\n\n  const handleLike = post => {\n    if (post.like_user_id.includes(currentUser.id)) onDisLike(currentUser.id, post.id);else onLike(currentUser.id, post.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Cardheader, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n      title: post.title,\n      subheader: formatDate(post.created)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: \"/images/my-image.JPG\",\n      title: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: post.sub_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      className: classes.cardActions,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"add to favorites\",\n        color: post.like_user_id.includes(currentUser.id) ? \"secondary\" : \"inherit\",\n        onClick: () => handleLike(post),\n        children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"share\",\n        children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        href: `/posts/${formatSlug(post.title)}/${post.id}`,\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getReadingTime(post.body)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostCard, \"xI546m0Lt+BQ1lWJwrwj9DffyRE=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostCard;\nexport default _c2 = useMemo(PostCard);\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n  onDisLike: PropTypes.func.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostCard\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Card/index.jsx"],"names":["useState","useEffect","useMemo","PropTypes","Card","Button","CardHeader","CardMedia","CardContent","CardActions","IconButton","Typography","FavoriteIcon","ShareIcon","formatDate","getReadingTime","Cardheader","formatSlug","useStyles","auth","PostCard","post","onLike","onDisLike","currentUser","setCurrentUser","classes","getCurrentUser","handleLike","like_user_id","includes","id","root","title","created","media","sub_title","cardActions","body","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"@material-ui/core\";\nimport {\n  CardHeader,\n  CardMedia,\n  CardContent,\n  CardActions,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport formatDate from \"../../utils/formatDate\";\nimport getReadingTime from \"../../utils/getReadingTime\";\nimport Cardheader from \"../CardHeader\";\nimport formatSlug from \"../../utils/formatSlug\";\nimport useStyles from \"./styles\";\n\nimport auth from \"../../services/authService\";\n\nconst PostCard = ({ post, onLike, onDisLike }) => {\n  const [currentUser, setCurrentUser] = useState({});\n  const classes = useStyles();\n\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, []);\n\n  const handleLike = (post) => {\n    if (post.like_user_id.includes(currentUser.id))\n      onDisLike(currentUser.id, post.id);\n    else onLike(currentUser.id, post.id);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <Cardheader post={post} />\n      <CardHeader title={post.title} subheader={formatDate(post.created)} />\n      <CardMedia\n        className={classes.media}\n        image=\"/images/my-image.JPG\"\n        title={post.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {post.sub_title}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardActions}>\n        <IconButton\n          aria-label=\"add to favorites\"\n          color={\n            post.like_user_id.includes(currentUser.id) ? \"secondary\" : \"inherit\"\n          }\n          onClick={() => handleLike(post)}\n        >\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          href={`/posts/${formatSlug(post.title)}/${post.id}`}\n        >\n          Read\n        </Button>\n        <p>{getReadingTime(post.body)}</p>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default useMemo(PostCard);\n\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n  onDisLike: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}