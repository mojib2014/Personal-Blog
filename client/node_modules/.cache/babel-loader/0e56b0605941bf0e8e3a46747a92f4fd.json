{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport * as Yup from \"yup\"; // import MDEditor from \"@uiw/react-md-editor\";\n// import { Button, makeStyles } from \"@material-ui/core\";\n\nimport SnackBar from \"../common/SnackBar\";\nimport PostContext from \"../context/postContext\";\nimport Form from \"../common/Form\";\nimport \"../index.less\";\nimport { Field } from \"formik\"; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: 500,\n//     },\n//   },\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostForm() {\n  _s();\n\n  const {\n    addPost,\n    err,\n    loading,\n    success\n  } = useContext(PostContext); // const [error, setError] = useState(null);\n  // const [open, setOpen] = useState(false);\n  // const [value, setValue] = useState(\"\");\n  // const [title, setTitle] = useState(\"\");\n  // const classes = useStyles();\n  // const handleClick = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = (event, reason) => {\n  //   if (reason === \"clickaway\") return setOpen(false);\n  // };\n  // const handleTitleChange = async ({ currentTarget: input }) => {\n  //   setTitle(input.value);\n  // };\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   addPost({ title: title, body: value });\n  //   handleClick();\n  // };\n\n  const schema = Yup.object().shape({\n    title: Yup.string().min(5).max(255).required(),\n    body: Yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      values: {\n        title: \"\",\n        email: \"\"\n      },\n      schema: schema,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"title\",\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        type: \"body\",\n        name: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"OT37yemp90NXOrMAUk58uY/Ui/g=\");\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx"],"names":["React","useState","useContext","Yup","SnackBar","PostContext","Form","Field","PostForm","addPost","err","loading","success","schema","object","shape","title","string","min","max","required","body","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAO,eAAP;AACA,SAASC,KAAT,QAAsB,QAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAqCV,UAAU,CAACG,WAAD,CAArD,CADiC,CAEjC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,MAAM,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,KAAK,EAAEb,GAAG,CAACc,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,QAA7B,EADyB;AAEhCC,IAAAA,IAAI,EAAElB,GAAG,CAACc,MAAJ,GAAaG,QAAb;AAF0B,GAAnB,CAAf;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAE;AAAEJ,QAAAA,KAAK,EAAE,EAAT;AAAaM,QAAAA,KAAK,EAAE;AAApB,OAAd;AAAwC,MAAA,MAAM,EAAET,MAAhD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GArEuBL,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport * as Yup from \"yup\";\n// import MDEditor from \"@uiw/react-md-editor\";\n// import { Button, makeStyles } from \"@material-ui/core\";\nimport SnackBar from \"../common/SnackBar\";\nimport PostContext from \"../context/postContext\";\nimport Form from \"../common/Form\";\nimport \"../index.less\";\nimport { Field } from \"formik\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: 500,\n//     },\n//   },\n// }));\n\nexport default function PostForm() {\n  const { addPost, err, loading, success } = useContext(PostContext);\n  // const [error, setError] = useState(null);\n  // const [open, setOpen] = useState(false);\n  // const [value, setValue] = useState(\"\");\n  // const [title, setTitle] = useState(\"\");\n  // const classes = useStyles();\n\n  // const handleClick = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleClose = (event, reason) => {\n  //   if (reason === \"clickaway\") return setOpen(false);\n  // };\n\n  // const handleTitleChange = async ({ currentTarget: input }) => {\n  //   setTitle(input.value);\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   addPost({ title: title, body: value });\n  //   handleClick();\n  // };\n\n  const schema = Yup.object().shape({\n    title: Yup.string().min(5).max(255).required(),\n    body: Yup.string().required(),\n  });\n\n  return (\n    <div className=\"content\">\n      <h1>Post Form</h1>\n      <Form values={{ title: \"\", email: \"\" }} schema={schema}>\n        <Field type=\"title\" name=\"title\" />\n        <Field type=\"body\" name=\"body\" />\n      </Form>\n      {/* <form\n        className={classes.root}\n        style={{ width: 500, margin: \"auto\" }}\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor=\"title\">Title*</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          label=\"Title\"\n          id=\"title\"\n          placeholder=\"Enter post title here\"\n          value={title}\n          onChange={handleTitleChange}\n        /> */}\n      {/* <div>{error}</div> */}\n      {/* <MDEditor value={value} onChange={setValue} /> */}\n      {/* <MDEditor.Markdown source={value} /> */}\n      {/* <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          {loading ? \"loading...\" : \"Submit\"}\n        </Button> */}\n      {/* </form> */}\n      {/* <SnackBar\n        message={error}\n        severity={error ? \"error\" : \"success\"}\n        success={success}\n        open={open}\n        onClose={handleClose}\n      /> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}