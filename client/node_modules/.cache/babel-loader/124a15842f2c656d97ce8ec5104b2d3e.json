{"ast":null,"code":"import http from \"./httpService\";\n\nconst getAllPosts = async () => {\n  try {\n    return await http.get(\"/posts\");\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getPostById = async post_id => {\n  try {\n    return await http.get(\"/posts/post\", {\n      params: post_id\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst createPost = async post => {\n  try {\n    return await http.post(\"/posts/new\", post);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst updatePostById = async post => {\n  try {\n    return await http.put(\"/posts/post/update\", post);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst deletePostComments = async post_id => {\n  try {\n    return await http.delete(\"/posts/post/comments/delete\", {\n      params: post_id\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst deletePost = async post_id => {\n  try {\n    return await http.delete(\"/posts/post/delete\", {\n      params: post_id\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst likePost = async (user_id, post_id) => {\n  try {\n    return await http.put(\"/posts/post/like\", {\n      user_id,\n      post_id\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst disLikePost = async (user_id, post_id) => {\n  try {\n    return await http.put(\"/posts/post/dislike\", {\n      user_id,\n      post_id\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst postService = {\n  createPost,\n  getAllPosts,\n  getPostById,\n  updatePostById,\n  deletePostComments,\n  deletePost,\n  likePost\n};\nexport default postService;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/services/postsService.js"],"names":["http","getAllPosts","get","err","getPostById","post_id","params","createPost","post","updatePostById","put","deletePostComments","delete","deletePost","likePost","user_id","disLikePost","postService"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,WAAW,GAAG,YAAY;AAC9B,MAAI;AACF,WAAO,MAAMD,IAAI,CAACE,GAAL,CAAS,QAAT,CAAb;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMC,WAAW,GAAG,MAAOC,OAAP,IAAmB;AACrC,MAAI;AACF,WAAO,MAAML,IAAI,CAACE,GAAL,CAAS,aAAT,EAAwB;AAAEI,MAAAA,MAAM,EAAED;AAAV,KAAxB,CAAb;AACD,GAFD,CAEE,OAAOF,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMI,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC,MAAI;AACF,WAAO,MAAMR,IAAI,CAACQ,IAAL,CAAU,YAAV,EAAwBA,IAAxB,CAAb;AACD,GAFD,CAEE,OAAOL,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMM,cAAc,GAAG,MAAOD,IAAP,IAAgB;AACrC,MAAI;AACF,WAAO,MAAMR,IAAI,CAACU,GAAL,CAAS,oBAAT,EAA+BF,IAA/B,CAAb;AACD,GAFD,CAEE,OAAOL,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMQ,kBAAkB,GAAG,MAAON,OAAP,IAAmB;AAC5C,MAAI;AACF,WAAO,MAAML,IAAI,CAACY,MAAL,CAAY,6BAAZ,EAA2C;AACtDN,MAAAA,MAAM,EAAED;AAD8C,KAA3C,CAAb;AAGD,GAJD,CAIE,OAAOF,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CARD;;AAUA,MAAMU,UAAU,GAAG,MAAOR,OAAP,IAAmB;AACpC,MAAI;AACF,WAAO,MAAML,IAAI,CAACY,MAAL,CAAY,oBAAZ,EAAkC;AAAEN,MAAAA,MAAM,EAAED;AAAV,KAAlC,CAAb;AACD,GAFD,CAEE,OAAOF,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMW,QAAQ,GAAG,OAAOC,OAAP,EAAgBV,OAAhB,KAA4B;AAC3C,MAAI;AACF,WAAO,MAAML,IAAI,CAACU,GAAL,CAAS,kBAAT,EAA6B;AAAEK,MAAAA,OAAF;AAAWV,MAAAA;AAAX,KAA7B,CAAb;AACD,GAFD,CAEE,OAAOF,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMa,WAAW,GAAG,OAAOD,OAAP,EAAgBV,OAAhB,KAA4B;AAC9C,MAAI;AACF,WAAO,MAAML,IAAI,CAACU,GAAL,CAAS,qBAAT,EAAgC;AAAEK,MAAAA,OAAF;AAAWV,MAAAA;AAAX,KAAhC,CAAb;AACD,GAFD,CAEE,OAAOF,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMc,WAAW,GAAG;AAClBV,EAAAA,UADkB;AAElBN,EAAAA,WAFkB;AAGlBG,EAAAA,WAHkB;AAIlBK,EAAAA,cAJkB;AAKlBE,EAAAA,kBALkB;AAMlBE,EAAAA,UANkB;AAOlBC,EAAAA;AAPkB,CAApB;AAUA,eAAeG,WAAf","sourcesContent":["import http from \"./httpService\";\n\nconst getAllPosts = async () => {\n  try {\n    return await http.get(\"/posts\");\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getPostById = async (post_id) => {\n  try {\n    return await http.get(\"/posts/post\", { params: post_id });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst createPost = async (post) => {\n  try {\n    return await http.post(\"/posts/new\", post);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst updatePostById = async (post) => {\n  try {\n    return await http.put(\"/posts/post/update\", post);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst deletePostComments = async (post_id) => {\n  try {\n    return await http.delete(\"/posts/post/comments/delete\", {\n      params: post_id,\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst deletePost = async (post_id) => {\n  try {\n    return await http.delete(\"/posts/post/delete\", { params: post_id });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst likePost = async (user_id, post_id) => {\n  try {\n    return await http.put(\"/posts/post/like\", { user_id, post_id });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst disLikePost = async (user_id, post_id) => {\n  try {\n    return await http.put(\"/posts/post/dislike\", { user_id, post_id });\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst postService = {\n  createPost,\n  getAllPosts,\n  getPostById,\n  updatePostById,\n  deletePostComments,\n  deletePost,\n  likePost,\n};\n\nexport default postService;\n"]},"metadata":{},"sourceType":"module"}