{"ast":null,"code":"import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\nhttp.setJWT(getJWT());\n\nasync function login(email, password) {\n  try {\n    const {\n      data: jwt\n    } = await http.post(\"/auth/login\", {\n      email,\n      password\n    });\n    localStorage.setItem(\"token\", jwt);\n  } catch (err) {\n    console.log(\"auth service: \", err);\n    throw err;\n  }\n}\n\nfunction loginWithJwt(jwt) {\n  localStorage.setItem(\"token\", jwt);\n}\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\nfunction getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n    return jwtDecode(jwt);\n  } catch (ex) {\n    throw ex; //return null; // that means we don't have the current user.\n  } // if there is an error we ignore that cause tachnically it's not our\n  // application error.\n\n}\n\nfunction getJWT() {\n  return localStorage.getItem(\"token\");\n}\n\nconst auth = {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJWT\n};\nexport default auth;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/services/authService.js"],"names":["http","jwtDecode","setJWT","getJWT","login","email","password","data","jwt","post","localStorage","setItem","err","console","log","loginWithJwt","logout","removeItem","getCurrentUser","getItem","ex","auth"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEAD,IAAI,CAACE,MAAL,CAAYC,MAAM,EAAlB;;AAEA,eAAeC,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAgB,MAAMR,IAAI,CAACS,IAAL,CAAU,aAAV,EAAyB;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAzB,CAA5B;AAEAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAA9B;AACD,GAJD,CAIE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACA,UAAMA,GAAN;AACD;AACF;;AAED,SAASG,YAAT,CAAsBP,GAAtB,EAA2B;AACzBE,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAA9B;AACD;;AAED,OAAO,MAAMQ,MAAM,GAAG,MAAM;AAC1BN,EAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACD,CAFM;;AAIP,SAASC,cAAT,GAA0B;AACxB,MAAI;AACF,UAAMV,GAAG,GAAGE,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAZ;AAEA,WAAOlB,SAAS,CAACO,GAAD,CAAhB;AACD,GAJD,CAIE,OAAOY,EAAP,EAAW;AACX,UAAMA,EAAN,CADW,CAEX;AACD,GARuB,CAQtB;AACF;;AACD;;AAED,SAASjB,MAAT,GAAkB;AAChB,SAAOO,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAP;AACD;;AAED,MAAME,IAAI,GAAG;AACXjB,EAAAA,KADW;AAEXW,EAAAA,YAFW;AAGXC,EAAAA,MAHW;AAIXE,EAAAA,cAJW;AAKXf,EAAAA;AALW,CAAb;AAQA,eAAekB,IAAf","sourcesContent":["import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\n\nhttp.setJWT(getJWT());\n\nasync function login(email, password) {\n  try {\n    const { data: jwt } = await http.post(\"/auth/login\", { email, password });\n\n    localStorage.setItem(\"token\", jwt);\n  } catch (err) {\n    console.log(\"auth service: \", err);\n    throw err;\n  }\n}\n\nfunction loginWithJwt(jwt) {\n  localStorage.setItem(\"token\", jwt);\n}\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\nfunction getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n\n    return jwtDecode(jwt);\n  } catch (ex) {\n    throw ex;\n    //return null; // that means we don't have the current user.\n  } // if there is an error we ignore that cause tachnically it's not our\n  // application error.\n}\n\nfunction getJWT() {\n  return localStorage.getItem(\"token\");\n}\n\nconst auth = {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJWT,\n};\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}