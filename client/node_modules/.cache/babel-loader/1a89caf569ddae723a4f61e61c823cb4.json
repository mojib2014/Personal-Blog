{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\n\nconst UseForm = (values, schema, handleSubmit) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const formik = useFormik({\n    initialValues: values,\n    validationSchema: schema,\n    onSubmit: values => {\n      handleSubmit(values);\n    }\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return setOpen(false);\n  };\n\n  return [formik, handleOpen, handleClose, open];\n};\n\n_s(UseForm, \"9q74HFATNsxItuiAKTv5BRNpOYo=\", false, function () {\n  return [useFormik];\n});\n\n_c = UseForm;\nexport default UseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/hooks/useForm.js"],"names":["React","useState","useFormik","UseForm","values","schema","handleSubmit","open","setOpen","formik","initialValues","validationSchema","onSubmit","handleOpen","handleClose","event","reason"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,YAAjB,KAAkC;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMQ,MAAM,GAAGP,SAAS,CAAC;AACvBQ,IAAAA,aAAa,EAAEN,MADQ;AAEvBO,IAAAA,gBAAgB,EAAEN,MAFK;AAGvBO,IAAAA,QAAQ,EAAGR,MAAD,IAAY;AACpBE,MAAAA,YAAY,CAACF,MAAD,CAAZ;AACD;AALsB,GAAD,CAAxB;;AAQA,QAAMS,UAAU,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B,OAAOR,OAAO,CAAC,KAAD,CAAd;AAC7B,GAFD;;AAIA,SAAO,CAACC,MAAD,EAASI,UAAT,EAAqBC,WAArB,EAAkCP,IAAlC,CAAP;AACD,CApBD;;GAAMJ,O;UAGWD,S;;;KAHXC,O;AAsBN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\n\nconst UseForm = (values, schema, handleSubmit) => {\n  const [open, setOpen] = useState(false);\n\n  const formik = useFormik({\n    initialValues: values,\n    validationSchema: schema,\n    onSubmit: (values) => {\n      handleSubmit(values);\n    },\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return setOpen(false);\n  };\n\n  return [formik, handleOpen, handleClose, open];\n};\n\nexport default UseForm;\n"]},"metadata":{},"sourceType":"module"}