{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport UserContext from \"../context/userContext\";\nimport SnackBar from \"../common/SnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500\n    }\n  }\n}));\n\nconst RegisterForm = () => {\n  _s();\n\n  const {\n    loading,\n    success,\n    error,\n    register\n  } = useContext(UserContext);\n  const classes = useStyles();\n  const schema = Yup.object().shape({\n    first_name: Yup.string().min(4).max(20).required().label(\"First Name\"),\n    last_name: Yup.string().min(4).max(20).required().label(\"Last Name\"),\n    email: Yup.string().email().required().label(\"Email\"),\n    password: Yup.string().min(6).required().label(\"password\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      register(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: classes.root,\n        style: {\n          width: \"500px\",\n          margin: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"first_name\",\n          name: \"first_name\",\n          label: \"First Name\",\n          type: \"name\",\n          value: formik.values[\"name\"],\n          onChange: formik.handleChange,\n          error: formik.touched.first_name && Boolean(formik.errors.first_name),\n          required: true,\n          helperText: formik.touched.first_name && formik.errors.first_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"last_name\",\n          name: \"last_name\",\n          label: \"Last Name\",\n          type: \"name\",\n          value: formik.values.last_name,\n          onChange: formik.handleChange,\n          error: formik.touched.last_name && Boolean(formik.errors.last_name),\n          required: true,\n          helperText: formik.touched.last_name && formik.errors.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"email\",\n          name: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          required: true,\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          required: true,\n          helperText: formik.touched.password && formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          children: loading ? \"loading...\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      error: error,\n      success: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"1vzfPKDEnSSY8jfZKW6Q4qdGDgA=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/RegisterForm.jsx"],"names":["React","useContext","useFormik","Yup","TextField","Button","makeStyles","UserContext","SnackBar","useStyles","theme","root","margin","spacing","width","RegisterForm","loading","success","error","register","classes","schema","object","shape","first_name","string","min","max","required","label","last_name","email","password","formik","initialValues","validationSchema","onSubmit","values","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport UserContext from \"../context/userContext\";\nimport SnackBar from \"../common/SnackBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500,\n    },\n  },\n}));\n\nconst RegisterForm = () => {\n  const { loading, success, error, register } = useContext(UserContext);\n  const classes = useStyles();\n\n  const schema = Yup.object().shape({\n    first_name: Yup.string().min(4).max(20).required().label(\"First Name\"),\n    last_name: Yup.string().min(4).max(20).required().label(\"Last Name\"),\n    email: Yup.string().email().required().label(\"Email\"),\n    password: Yup.string().min(6).required().label(\"password\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      register(values);\n    },\n  });\n\n  return (\n    <div className=\"content\">\n      <h1>Register Form</h1>\n      <div className=\"form-content\">\n        <form\n          onSubmit={formik.handleSubmit}\n          className={classes.root}\n          style={{ width: \"500px\", margin: \"auto\" }}\n        >\n          <TextField\n            fullWidth\n            id=\"first_name\"\n            name=\"first_name\"\n            label=\"First Name\"\n            type=\"name\"\n            value={formik.values[\"name\"]}\n            onChange={formik.handleChange}\n            error={\n              formik.touched.first_name && Boolean(formik.errors.first_name)\n            }\n            required\n            helperText={formik.touched.first_name && formik.errors.first_name}\n          />\n          <TextField\n            fullWidth\n            id=\"last_name\"\n            name=\"last_name\"\n            label=\"Last Name\"\n            type=\"name\"\n            value={formik.values.last_name}\n            onChange={formik.handleChange}\n            error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n            required\n            helperText={formik.touched.last_name && formik.errors.last_name}\n          />\n          <TextField\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            required\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            fullWidth\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            required\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            {loading ? \"loading...\" : \"Register\"}\n          </Button>\n        </form>\n      </div>\n      <SnackBar error={error} success={success} />\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}