{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/RegisterForm/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport UserContext from \"../../context/userContext\";\nimport Snack from \"../../common/Snack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500,\n      margin: 5\n    }\n  }\n}));\n\nconst RegisterForm = () => {\n  _s();\n\n  const {\n    loading,\n    success,\n    error,\n    register\n  } = useContext(UserContext);\n  const classes = useStyles();\n  const schema = Yup.object().shape({\n    first_name: Yup.string(\"Enter your first name\").min(4, \"First Name should be of minimum 4 characters\").max(20, \"First Name should be of maximum 20 characters length\").required(\"First name is required\"),\n    last_name: Yup.string(\"Enter your last name\").min(4, \"Last Name should be of minimum 4 characters\").max(20, \"First Name should be of maximum 20 characters length\").required(\"Last Name is required\"),\n    email: Yup.string(\"Enter your email\").email(\"Enter a valid email\").required(\"Email is required\"),\n    password: Yup.string(\"Enter your password\").min(6, \"Password should be of minimum 6 characters length\").required(\"Password is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      register(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snack, {\n      error: error,\n      success: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: classes.root,\n      style: {\n        width: \"500px\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"first_name\",\n        name: \"first_name\",\n        label: \"First Name\",\n        value: formik.values[\"name\"],\n        onChange: formik.handleChange,\n        error: formik.touched.first_name && Boolean(formik.errors.first_name),\n        helperText: formik.touched.first_name && formik.errors.first_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"last_name\",\n        name: \"last_name\",\n        label: \"Last Name\",\n        value: formik.values.last_name,\n        onChange: formik.handleChange,\n        error: formik.touched.last_name && Boolean(formik.errors.last_name),\n        helperText: formik.touched.last_name && formik.errors.last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.touched.email && Boolean(formik.errors.email),\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.touched.password && Boolean(formik.errors.password),\n        helperText: formik.touched.password && formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: loading ? \"loading...\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"1vzfPKDEnSSY8jfZKW6Q4qdGDgA=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/RegisterForm/RegisterForm.js"],"names":["React","useContext","useFormik","Yup","TextField","Button","makeStyles","UserContext","Snack","useStyles","theme","root","margin","spacing","width","RegisterForm","loading","success","error","register","classes","schema","object","shape","first_name","string","min","max","required","last_name","email","password","formik","initialValues","validationSchema","onSubmit","values","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport UserContext from \"../../context/userContext\";\nimport Snack from \"../../common/Snack\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500,\n      margin: 5,\n    },\n  },\n}));\n\nconst RegisterForm = () => {\n  const { loading, success, error, register } = useContext(UserContext);\n  const classes = useStyles();\n\n  const schema = Yup.object().shape({\n    first_name: Yup.string(\"Enter your first name\")\n      .min(4, \"First Name should be of minimum 4 characters\")\n      .max(20, \"First Name should be of maximum 20 characters length\")\n      .required(\"First name is required\"),\n    last_name: Yup.string(\"Enter your last name\")\n      .min(4, \"Last Name should be of minimum 4 characters\")\n      .max(20, \"First Name should be of maximum 20 characters length\")\n      .required(\"Last Name is required\"),\n    email: Yup.string(\"Enter your email\")\n      .email(\"Enter a valid email\")\n      .required(\"Email is required\"),\n    password: Yup.string(\"Enter your password\")\n      .min(6, \"Password should be of minimum 6 characters length\")\n      .required(\"Password is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      register(values);\n    },\n  });\n\n  return (\n    <div className=\"content\">\n      <h1>Register Form</h1>\n      <Snack error={error} success={success} />\n\n      <form\n        onSubmit={formik.handleSubmit}\n        className={classes.root}\n        style={{ width: \"500px\", margin: \"auto\" }}\n      >\n        <TextField\n          fullWidth\n          id=\"first_name\"\n          name=\"first_name\"\n          label=\"First Name\"\n          value={formik.values[\"name\"]}\n          onChange={formik.handleChange}\n          error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n          helperText={formik.touched.first_name && formik.errors.first_name}\n        />\n        <TextField\n          fullWidth\n          id=\"last_name\"\n          name=\"last_name\"\n          label=\"Last Name\"\n          value={formik.values.last_name}\n          onChange={formik.handleChange}\n          error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n          helperText={formik.touched.last_name && formik.errors.last_name}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          {loading ? \"loading...\" : \"Register\"}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}