{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { TextField, Button, makeStyles } from \"@material-ui/core\";\nimport SnackBar from \"../common/SnackBar\";\nimport UseForm from \"../hooks/useForm\";\nimport \"../index.less\";\nimport { PostContext } from \"../context/postContext\";\nimport actions from \"../context/actions/actions\";\nimport postService from \"../services/postsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      marginBottom: theme.spacing(5),\n      marginTop: theme.spacing(5)\n    }\n  }\n}));\nexport default function PostForm() {\n  _s();\n\n  const {\n    loading,\n    success,\n    dispatch\n  } = useContext(PostContext);\n  const [value, setValue] = useState(\"\");\n  const schema = Yup.object().shape({\n    title: Yup.string().min(5).max(255).required().label(\"Title\")\n  });\n\n  const handleSubmit = async values => {\n    try {\n      const {\n        data\n      } = await postService.createPost({ ...values,\n        body: value\n      });\n      dispatch(actions.addPost(data));\n    } catch (err) {\n      dispatch(actions.error(err.response.data || err.message));\n    }\n  };\n\n  const values = {\n    title: \"\",\n    sub_title: \"\"\n  };\n  const [formik, handleClose, open] = UseForm(values, schema, handleSubmit);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"title\",\n          type: \"text\",\n          name: \"title\",\n          label: \"Title\",\n          value: formik.values.title,\n          onChange: formik.handleChange,\n          error: formik.touched.title && Boolean(formik.errors.title),\n          helperText: formik.touched.title && formik.errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"sub_title\",\n          type: \"text\",\n          name: \"sub_title\",\n          label: \"Subtitle\",\n          value: formik.values.sub_title,\n          onChange: formik.handleChange,\n          error: formik.touched.sub_title && Boolean(formik.errors.sub_title),\n          helperText: formik.touched.sub_title && formik.errors.sub_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDEditor, {\n          value: value,\n          onChange: setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          children: loading ? \"Loading...\" : \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      open: open,\n      err: formik.errors.title,\n      severity: formik.errors.title ? \"error\" : \"success\",\n      success: success,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"Ej4e2EJVwruyY/arfwC4/9X5Eow=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx"],"names":["React","useState","useContext","Yup","MDEditor","TextField","Button","makeStyles","SnackBar","UseForm","PostContext","actions","postService","useStyles","theme","root","marginBottom","spacing","marginTop","PostForm","loading","success","dispatch","value","setValue","schema","object","shape","title","string","min","max","required","label","handleSubmit","values","data","createPost","body","addPost","err","error","response","message","sub_title","formik","handleClose","open","classes","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { TextField, Button, makeStyles } from \"@material-ui/core\";\n\nimport SnackBar from \"../common/SnackBar\";\nimport UseForm from \"../hooks/useForm\";\nimport \"../index.less\";\nimport { PostContext } from \"../context/postContext\";\nimport actions from \"../context/actions/actions\";\nimport postService from \"../services/postsService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      marginBottom: theme.spacing(5),\n      marginTop: theme.spacing(5),\n    },\n  },\n}));\n\nexport default function PostForm() {\n  const { loading, success, dispatch } = useContext(PostContext);\n  const [value, setValue] = useState(\"\");\n\n  const schema = Yup.object().shape({\n    title: Yup.string().min(5).max(255).required().label(\"Title\"),\n  });\n\n  const handleSubmit = async (values) => {\n    try {\n      const { data } = await postService.createPost({ ...values, body: value });\n      dispatch(actions.addPost(data));\n    } catch (err) {\n      dispatch(actions.error(err.response.data || err.message));\n    }\n  };\n\n  const values = { title: \"\", sub_title: \"\" };\n\n  const [formik, handleClose, open] = UseForm(values, schema, handleSubmit);\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"content\">\n      <h1>Post Form</h1>\n      <div className=\"form-content\">\n        <form onSubmit={formik.handleSubmit} className={classes.root}>\n          <TextField\n            fullWidth\n            id=\"title\"\n            type=\"text\"\n            name=\"title\"\n            label=\"Title\"\n            value={formik.values.title}\n            onChange={formik.handleChange}\n            error={formik.touched.title && Boolean(formik.errors.title)}\n            helperText={formik.touched.title && formik.errors.title}\n          />\n          <TextField\n            fullWidth\n            id=\"sub_title\"\n            type=\"text\"\n            name=\"sub_title\"\n            label=\"Subtitle\"\n            value={formik.values.sub_title}\n            onChange={formik.handleChange}\n            error={formik.touched.sub_title && Boolean(formik.errors.sub_title)}\n            helperText={formik.touched.sub_title && formik.errors.sub_title}\n          />\n          <MDEditor value={value} onChange={setValue} />\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            {loading ? \"Loading...\" : \"Submit\"}\n          </Button>\n        </form>\n      </div>\n      <SnackBar\n        open={open}\n        err={formik.errors.title}\n        severity={formik.errors.title ? \"error\" : \"success\"}\n        success={success}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}