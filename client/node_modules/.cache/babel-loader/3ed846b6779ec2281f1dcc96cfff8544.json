{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Card/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"@material-ui/core\";\nimport { CardHeader, CardMedia, CardContent, CardActions, IconButton, Typography } from \"@material-ui/core\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport formatDate from \"../../utils/formatDate\";\nimport getReadingTime from \"../../utils/getReadingTime\";\nimport Cardheader from \"../CardHeader\";\nimport formatSlug from \"../../utils/formatSlug\";\nimport useStyles from \"./styles\";\nimport auth from \"../../services/authService\";\nimport Like from \"../Like\";\nimport usePostsState from \"../../hooks/usePostsState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post,\n  onLike,\n  onDisLike\n}) => {\n  _s();\n\n  const [state,, setSelectedPost] = usePostsState();\n  const [currentUser, setCurrentUser] = useState({});\n  const classes = useStyles();\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, []);\n\n  const handleLike = post => {\n    if (post.like_user_id.includes(currentUser.id)) onDisLike(currentUser.id, post.id);else onLike(currentUser.id, post.id);\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    setSelectedPost(post);\n    window.location = `/posts/${state.selectedPost.title}/${state.selectedPost.id}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Cardheader, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n      title: post.title,\n      subheader: formatDate(post.created)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: \"/images/my-image.JPG\",\n      title: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: post.sub_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      className: classes.cardActions,\n      children: [/*#__PURE__*/_jsxDEV(Like, {\n        item: post,\n        currentUser: currentUser,\n        handleLike: handleLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"share\",\n        children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: handleClick,\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getReadingTime(post.body)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostCard, \"Xchf4Kj5FraLWg1wAhutTv6PbqI=\", false, function () {\n  return [usePostsState, useStyles];\n});\n\n_c = PostCard;\nexport default PostCard;\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n  onDisLike: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Card/index.jsx"],"names":["useState","useEffect","PropTypes","Card","Button","CardHeader","CardMedia","CardContent","CardActions","IconButton","Typography","ShareIcon","formatDate","getReadingTime","Cardheader","formatSlug","useStyles","auth","Like","usePostsState","PostCard","post","onLike","onDisLike","state","setSelectedPost","currentUser","setCurrentUser","classes","getCurrentUser","handleLike","like_user_id","includes","id","handleClick","e","preventDefault","window","location","selectedPost","title","root","created","media","sub_title","cardActions","body","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"@material-ui/core\";\nimport {\n  CardHeader,\n  CardMedia,\n  CardContent,\n  CardActions,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport formatDate from \"../../utils/formatDate\";\nimport getReadingTime from \"../../utils/getReadingTime\";\nimport Cardheader from \"../CardHeader\";\nimport formatSlug from \"../../utils/formatSlug\";\nimport useStyles from \"./styles\";\n\nimport auth from \"../../services/authService\";\nimport Like from \"../Like\";\nimport usePostsState from \"../../hooks/usePostsState\";\n\nconst PostCard = ({ post, onLike, onDisLike }) => {\n  const [state, , setSelectedPost] = usePostsState();\n  const [currentUser, setCurrentUser] = useState({});\n  const classes = useStyles();\n\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, []);\n\n  const handleLike = (post) => {\n    if (post.like_user_id.includes(currentUser.id))\n      onDisLike(currentUser.id, post.id);\n    else onLike(currentUser.id, post.id);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    setSelectedPost(post);\n\n    window.location = `/posts/${state.selectedPost.title}/${state.selectedPost.id}`;\n  };\n\n  return (\n    <Card className={classes.root}>\n      <Cardheader post={post} />\n      <CardHeader title={post.title} subheader={formatDate(post.created)} />\n      <CardMedia\n        className={classes.media}\n        image=\"/images/my-image.JPG\"\n        title={post.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {post.sub_title}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardActions}>\n        <Like item={post} currentUser={currentUser} handleLike={handleLike} />\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <Button size=\"small\" color=\"primary\" onClick={handleClick}>\n          Read\n        </Button>\n        <p>{getReadingTime(post.body)}</p>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default PostCard;\n\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n  onDisLike: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}