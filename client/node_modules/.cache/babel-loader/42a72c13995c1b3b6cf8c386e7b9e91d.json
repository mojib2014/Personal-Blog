{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Card/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"@material-ui/core\";\nimport { CardHeader, CardMedia, CardContent, CardActions, IconButton, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport formatDate from \"../../utils/formatDate\";\nimport getReadingTime from \"../../utils/getReadingTime\";\nimport Cardheader from \"../CardHeader\";\nimport formatSlug from \"../../utils/formatSlug\";\nimport useStyles from \"./styles\";\nimport auth from \"../../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostCard({\n  post,\n  onLike\n}) {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const classes = useStyles();\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Cardheader, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n      title: post.title,\n      subheader: formatDate(post.created)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: \"/images/my-image.JPG\",\n      title: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: post.sub_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      className: classes.cardActions,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"add to favorites\",\n        color: post.like_user_id.includes(currentUser.id) ? \"red\" : \"null\",\n        onClick: () => onLike(auth.getCurrentUser().id, post.id),\n        children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"share\",\n        children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        href: `/posts/${formatSlug(post.title)}/${post.id}`,\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getReadingTime(post.body)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostCard, \"GxJD7FKXb8GrcAhSv/uCP8OchuY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Card/index.jsx"],"names":["useState","useEffect","PropTypes","Card","Button","CardHeader","CardMedia","CardContent","CardActions","IconButton","Typography","FavoriteIcon","ShareIcon","formatDate","getReadingTime","Cardheader","formatSlug","useStyles","auth","PostCard","post","onLike","currentUser","setCurrentUser","classes","getCurrentUser","root","title","created","media","sub_title","cardActions","like_user_id","includes","id","body","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"@material-ui/core\";\nimport {\n  CardHeader,\n  CardMedia,\n  CardContent,\n  CardActions,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport formatDate from \"../../utils/formatDate\";\nimport getReadingTime from \"../../utils/getReadingTime\";\nimport Cardheader from \"../CardHeader\";\nimport formatSlug from \"../../utils/formatSlug\";\nimport useStyles from \"./styles\";\n\nimport auth from \"../../services/authService\";\n\nexport default function PostCard({ post, onLike }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, [currentUser]);\n\n  return (\n    <Card className={classes.root}>\n      <Cardheader post={post} />\n      <CardHeader title={post.title} subheader={formatDate(post.created)} />\n      <CardMedia\n        className={classes.media}\n        image=\"/images/my-image.JPG\"\n        title={post.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {post.sub_title}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardActions}>\n        <IconButton\n          aria-label=\"add to favorites\"\n          color={post.like_user_id.includes(currentUser.id) ? \"red\" : \"null\"}\n          onClick={() => onLike(auth.getCurrentUser().id, post.id)}\n        >\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          href={`/posts/${formatSlug(post.title)}/${post.id}`}\n        >\n          Read\n        </Button>\n        <p>{getReadingTime(post.body)}</p>\n      </CardActions>\n    </Card>\n  );\n}\n\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}