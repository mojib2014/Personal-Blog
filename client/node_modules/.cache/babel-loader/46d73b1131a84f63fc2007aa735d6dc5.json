{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { TextField, // TextareaAutosize,\nButton, makeStyles } from \"@material-ui/core\";\nimport SnackBar from \"../common/SnackBar\";\nimport PostContext from \"../context/postContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500\n    }\n  }\n}));\nexport default function PostForm() {\n  _s();\n\n  const {\n    addPost,\n    err,\n    loading,\n    success\n  } = useContext(PostContext);\n  const [error, setError] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const classes = useStyles();\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return setOpen(false);\n  };\n\n  const handleTitleChange = ({\n    currentTarget: input\n  }) => {\n    setTitle(input.value);\n  };\n\n  const schema = Yup.object().shape({\n    title: Yup.string().min(20).max(255).required().label(\"Ttitle\"),\n    body: Yup.string().min(50).required().label(\"Body\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      body: \"\"\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      handleClick();\n      addPost(values);\n\n      if (err) {\n        setError(err);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      style: {\n        width: 500,\n        margin: \"auto\"\n      },\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        label: \"Title\",\n        id: \"title\",\n        placeholder: \"Enter post title here\",\n        value: title,\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: value,\n        onChange: setValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: loading ? \"loading...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      message: error,\n      severity: error ? \"error\" : \"success\",\n      success: success,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"m76L/AnxUN8oGo8JZm98QLHPh0U=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx"],"names":["React","useState","useContext","useFormik","Yup","MDEditor","TextField","Button","makeStyles","SnackBar","PostContext","useStyles","theme","root","margin","spacing","width","PostForm","addPost","err","loading","success","error","setError","open","setOpen","value","setValue","title","setTitle","classes","handleClick","handleClose","event","reason","handleTitleChange","currentTarget","input","schema","object","shape","string","min","max","required","label","body","formik","initialValues","validationSchema","onSubmit","values","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SACEC,SADF,EAEE;AACAC,MAHF,EAIEC,UAJF,QAKO,mBALP;AAMA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE;AAFe;AADpB;AADiC,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAqCnB,UAAU,CAACQ,WAAD,CAArD;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM6B,OAAO,GAAGnB,SAAS,EAAzB;;AAEA,QAAMoB,WAAW,GAAG,MAAM;AACxBN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMO,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B,OAAOT,OAAO,CAAC,KAAD,CAAd;AAC7B,GAFD;;AAIA,QAAMU,iBAAiB,GAAG,CAAC;AAAEC,IAAAA,aAAa,EAAEC;AAAjB,GAAD,KAA8B;AACtDR,IAAAA,QAAQ,CAACQ,KAAK,CAACX,KAAP,CAAR;AACD,GAFD;;AAIA,QAAMY,MAAM,GAAGlC,GAAG,CAACmC,MAAJ,GAAaC,KAAb,CAAmB;AAChCZ,IAAAA,KAAK,EAAExB,GAAG,CAACqC,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,GAAzB,EAA8BC,QAA9B,GAAyCC,KAAzC,CAA+C,QAA/C,CADyB;AAEhCC,IAAAA,IAAI,EAAE1C,GAAG,CAACqC,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,EAAqBE,QAArB,GAAgCC,KAAhC,CAAsC,MAAtC;AAF0B,GAAnB,CAAf;AAKA,QAAME,MAAM,GAAG5C,SAAS,CAAC;AACvB6C,IAAAA,aAAa,EAAE;AACbpB,MAAAA,KAAK,EAAE,EADM;AAEbkB,MAAAA,IAAI,EAAE;AAFO,KADQ;AAKvBG,IAAAA,gBAAgB,EAAEX,MALK;AAMvBY,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBpB,MAAAA,WAAW;AACXb,MAAAA,OAAO,CAACiC,MAAD,CAAP;;AAEA,UAAIhC,GAAJ,EAAS;AACPI,QAAAA,QAAQ,CAACJ,GAAD,CAAR;AACD;AACF;AAbsB,GAAD,CAAxB;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAEW,OAAO,CAACjB,IADrB;AAEE,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE,GAAT;AAAcF,QAAAA,MAAM,EAAE;AAAtB,OAFT;AAGE,MAAA,QAAQ,EAAEiC,MAAM,CAACK,YAHnB;AAAA,8BAKE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,EAAE,EAAC,OAJL;AAKE,QAAA,WAAW,EAAC,uBALd;AAME,QAAA,KAAK,EAAExB,KANT;AAOE,QAAA,QAAQ,EAAEO;AAPZ;AAAA;AAAA;AAAA;AAAA,cANF,eAeE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAET,KAAjB;AAAwB,QAAA,QAAQ,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAfF,eAiCE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAC,WAAhC;AAA4C,QAAA,SAAS,MAArD;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAA,kBACGP,OAAO,GAAG,YAAH,GAAkB;AAD5B;AAAA;AAAA;AAAA;AAAA,cAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAuCE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEE,KADX;AAEE,MAAA,QAAQ,EAAEA,KAAK,GAAG,OAAH,GAAa,SAF9B;AAGE,MAAA,OAAO,EAAED,OAHX;AAIE,MAAA,IAAI,EAAEG,IAJR;AAKE,MAAA,OAAO,EAAEQ;AALX;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GA1FuBf,Q;UAMNN,S,EAmBDR,S;;;KAzBOc,Q","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport {\n  TextField,\n  // TextareaAutosize,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport SnackBar from \"../common/SnackBar\";\nimport PostContext from \"../context/postContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500,\n    },\n  },\n}));\n\nexport default function PostForm() {\n  const { addPost, err, loading, success } = useContext(PostContext);\n  const [error, setError] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const classes = useStyles();\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return setOpen(false);\n  };\n\n  const handleTitleChange = ({ currentTarget: input }) => {\n    setTitle(input.value);\n  };\n\n  const schema = Yup.object().shape({\n    title: Yup.string().min(20).max(255).required().label(\"Ttitle\"),\n    body: Yup.string().min(50).required().label(\"Body\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      body: \"\",\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      handleClick();\n      addPost(values);\n\n      if (err) {\n        setError(err);\n      }\n    },\n  });\n\n  return (\n    <div className=\"content\">\n      <h1>Post Form</h1>\n      <form\n        className={classes.root}\n        style={{ width: 500, margin: \"auto\" }}\n        onSubmit={formik.handleSubmit}\n      >\n        <label htmlFor=\"title\">Title*</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          label=\"Title\"\n          id=\"title\"\n          placeholder=\"Enter post title here\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        <MDEditor value={value} onChange={setValue} />\n        {/* <MDEditor.Markdown source={value} /> */}\n        {/* <TextareaAutosize\n          id=\"body\"\n          name=\"body\"\n          label=\"Body\"\n          type=\"textarea\"\n          maxRows={10}\n          minRows={15}\n          cols={60}\n          value={formik.values.body}\n          onChange={formik.handleChange}\n          aria-label=\"maximum height\"\n          placeholder=\"MAXIMUM 255 CHARACTERS\"\n          error={formik.touched.title && Boolean(formik.errors.body).toString()}\n          required\n          autoComplete=\"current-title\"\n        /> */}\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          {loading ? \"loading...\" : \"Submit\"}\n        </Button>\n      </form>\n      <SnackBar\n        message={error}\n        severity={error ? \"error\" : \"success\"}\n        success={success}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}