{"ast":null,"code":"import actionTypes from \"./action_types\";\n\nconst loading = () => {\n  return {\n    type: actionTypes.LOADING\n  };\n};\n\nconst error = err => {\n  return {\n    type: actionTypes.ERROR,\n    payload: err\n  };\n};\n\nconst registerUser = user => {\n  return {\n    type: actionTypes.REGISTER,\n    payload: user\n  };\n};\n\nconst updateUser = user => {\n  return {\n    type: actionTypes.UPDATE,\n    payload: user\n  };\n};\n\nconst deleteUser = user => {\n  return {\n    type: actionTypes.DELETE,\n    payload: user\n  };\n};\n\nconst getUserByEmail = user => {\n  return {\n    type: actionTypes.GET_USER_BY_EMAIL,\n    payload: user\n  };\n};\n\nconst loginUser = user => {\n  return {\n    type: actionTypes.LOGIN,\n    payload: user\n  };\n};\n\nconst logoutUser = user => {\n  return {\n    type: actionTypes.LOGOUT,\n    payload: user\n  };\n};\n\nconst addPost = item => {\n  return {\n    type: actionTypes.ADD_POST,\n    payload: item\n  };\n};\n\nconst getPosts = item => {\n  return {\n    type: actionTypes.GET,\n    payload: item\n  };\n};\n\nconst getSelected = item => {\n  return {\n    type: actionTypes.SELECTED,\n    payload: item\n  };\n};\n\nconst getUser = item => {\n  return {\n    type: actionTypes.GET,\n    palyload: item\n  };\n};\n\nconst actions = {\n  loading,\n  error,\n  registerUser,\n  updateUser,\n  deleteUser,\n  loginUser,\n  logoutUser,\n  getUserByEmail,\n  addPost,\n  getPosts,\n  getSelected,\n  getUser\n};\nexport default actions;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/store/actions/actions.js"],"names":["actionTypes","loading","type","LOADING","error","err","ERROR","payload","registerUser","user","REGISTER","updateUser","UPDATE","deleteUser","DELETE","getUserByEmail","GET_USER_BY_EMAIL","loginUser","LOGIN","logoutUser","LOGOUT","addPost","item","ADD_POST","getPosts","GET","getSelected","SELECTED","getUser","palyload","actions"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAO;AACLC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMC,KAAK,GAAIC,GAAD,IAAS;AACrB,SAAO;AACLH,IAAAA,IAAI,EAAEF,WAAW,CAACM,KADb;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMG,YAAY,GAAIC,IAAD,IAAU;AAC7B,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAACU,QADb;AAELH,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,MAAME,UAAU,GAAIF,IAAD,IAAU;AAC3B,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAACY,MADb;AAELL,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMI,UAAU,GAAIJ,IAAD,IAAU;AAC3B,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAACc,MADb;AAELP,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMM,cAAc,GAAIN,IAAD,IAAU;AAC/B,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAACgB,iBADb;AAELT,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMQ,SAAS,GAAIR,IAAD,IAAU;AAC1B,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAACkB,KADb;AAELX,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMU,UAAU,GAAIV,IAAD,IAAU;AAC3B,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAACoB,MADb;AAELb,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMY,OAAO,GAAIC,IAAD,IAAU;AACxB,SAAO;AACLpB,IAAAA,IAAI,EAAEF,WAAW,CAACuB,QADb;AAELhB,IAAAA,OAAO,EAAEe;AAFJ,GAAP;AAID,CALD;;AAOA,MAAME,QAAQ,GAAIF,IAAD,IAAU;AACzB,SAAO;AACLpB,IAAAA,IAAI,EAAEF,WAAW,CAACyB,GADb;AAELlB,IAAAA,OAAO,EAAEe;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMI,WAAW,GAAIJ,IAAD,IAAU;AAC5B,SAAO;AACLpB,IAAAA,IAAI,EAAEF,WAAW,CAAC2B,QADb;AAELpB,IAAAA,OAAO,EAAEe;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMM,OAAO,GAAIN,IAAD,IAAU;AACxB,SAAO;AACLpB,IAAAA,IAAI,EAAEF,WAAW,CAACyB,GADb;AAELI,IAAAA,QAAQ,EAAEP;AAFL,GAAP;AAID,CALD;;AAOA,MAAMQ,OAAO,GAAG;AACd7B,EAAAA,OADc;AAEdG,EAAAA,KAFc;AAGdI,EAAAA,YAHc;AAIdG,EAAAA,UAJc;AAKdE,EAAAA,UALc;AAMdI,EAAAA,SANc;AAOdE,EAAAA,UAPc;AAQdJ,EAAAA,cARc;AASdM,EAAAA,OATc;AAUdG,EAAAA,QAVc;AAWdE,EAAAA,WAXc;AAYdE,EAAAA;AAZc,CAAhB;AAeA,eAAeE,OAAf","sourcesContent":["import actionTypes from \"./action_types\";\n\nconst loading = () => {\n  return {\n    type: actionTypes.LOADING,\n  };\n};\n\nconst error = (err) => {\n  return {\n    type: actionTypes.ERROR,\n    payload: err,\n  };\n};\n\nconst registerUser = (user) => {\n  return {\n    type: actionTypes.REGISTER,\n    payload: user,\n  };\n};\n\nconst updateUser = (user) => {\n  return {\n    type: actionTypes.UPDATE,\n    payload: user,\n  };\n};\n\nconst deleteUser = (user) => {\n  return {\n    type: actionTypes.DELETE,\n    payload: user,\n  };\n};\n\nconst getUserByEmail = (user) => {\n  return {\n    type: actionTypes.GET_USER_BY_EMAIL,\n    payload: user,\n  };\n};\n\nconst loginUser = (user) => {\n  return {\n    type: actionTypes.LOGIN,\n    payload: user,\n  };\n};\n\nconst logoutUser = (user) => {\n  return {\n    type: actionTypes.LOGOUT,\n    payload: user,\n  };\n};\n\nconst addPost = (item) => {\n  return {\n    type: actionTypes.ADD_POST,\n    payload: item,\n  };\n};\n\nconst getPosts = (item) => {\n  return {\n    type: actionTypes.GET,\n    payload: item,\n  };\n};\n\nconst getSelected = (item) => {\n  return {\n    type: actionTypes.SELECTED,\n    payload: item,\n  };\n};\n\nconst getUser = (item) => {\n  return {\n    type: actionTypes.GET,\n    palyload: item,\n  };\n};\n\nconst actions = {\n  loading,\n  error,\n  registerUser,\n  updateUser,\n  deleteUser,\n  loginUser,\n  logoutUser,\n  getUserByEmail,\n  addPost,\n  getPosts,\n  getSelected,\n  getUser,\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}