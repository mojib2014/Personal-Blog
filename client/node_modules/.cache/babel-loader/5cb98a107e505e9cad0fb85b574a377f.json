{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport MDEditor from \"@uiw/react-md-editor\"; // import { Button, makeStyles } from \"@material-ui/core\";\n\nimport SnackBar from \"../common/SnackBar\";\nimport PostContext from \"../context/postContext\";\nimport Form from \"../common/Form\";\nimport \"../index.less\";\nimport { Field, ErrorMessage } from \"formik\"; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: 500,\n//     },\n//   },\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostForm() {\n  _s();\n\n  const {\n    addPost,\n    err,\n    loading,\n    success\n  } = useContext(PostContext); // const [error, setError] = useState(null);\n  // const [open, setOpen] = useState(false);\n\n  const [value, setValue] = useState(\"\"); // const [title, setTitle] = useState(\"\");\n  // const classes = useStyles();\n  // const handleClick = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = (event, reason) => {\n  //   if (reason === \"clickaway\") return setOpen(false);\n  // };\n  // const handleTitleChange = async ({ currentTarget: input }) => {\n  //   setTitle(input.value);\n  // };\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   addPost({ title: title, body: value });\n  //   handleClick();\n  // };\n\n  const schema = Yup.object().shape({\n    title: Yup.string().min(5).max(255).required().label(\"Title\"),\n    body: Yup.string().required().label(\"Body\")\n  });\n\n  const handleSubmit = post => {\n    console.log(\"post\", post);\n    addPost(post);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      values: {\n        title: \"\",\n        body: \"\"\n      },\n      schema: schema,\n      formTitle: \"Post Form\",\n      onSubmit: handleSubmit,\n      bodyValue: value,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"title\",\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"title\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: value,\n        onChange: setValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"owSgTDatCSmKMaX8mOQeVzQgBec=\");\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx"],"names":["React","useState","useContext","Yup","MDEditor","SnackBar","PostContext","Form","Field","ErrorMessage","PostForm","addPost","err","loading","success","value","setValue","schema","object","shape","title","string","min","max","required","label","body","handleSubmit","post","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAO,eAAP;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAqCZ,UAAU,CAACI,WAAD,CAArD,CADiC,CAEjC;AACA;;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAJiC,CAKjC;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMgB,MAAM,GAAGd,GAAG,CAACe,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,KAAK,EAAEjB,GAAG,CAACkB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,QAA7B,GAAwCC,KAAxC,CAA8C,OAA9C,CADyB;AAEhCC,IAAAA,IAAI,EAAEvB,GAAG,CAACkB,MAAJ,GAAaG,QAAb,GAAwBC,KAAxB,CAA8B,MAA9B;AAF0B,GAAnB,CAAf;;AAKA,QAAME,YAAY,GAAIC,IAAD,IAAU;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACAjB,IAAAA,OAAO,CAACiB,IAAD,CAAP;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,MAAM,EAAE;AAAER,QAAAA,KAAK,EAAE,EAAT;AAAaM,QAAAA,IAAI,EAAE;AAAnB,OADV;AAEE,MAAA,MAAM,EAAET,MAFV;AAGE,MAAA,SAAS,EAAC,WAHZ;AAIE,MAAA,QAAQ,EAAEU,YAJZ;AAKE,MAAA,SAAS,EAAEZ,KALb;AAAA,8BAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cARF,eAUE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,KAAjB;AAAwB,QAAA,QAAQ,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA5DuBN,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport MDEditor from \"@uiw/react-md-editor\";\n// import { Button, makeStyles } from \"@material-ui/core\";\nimport SnackBar from \"../common/SnackBar\";\nimport PostContext from \"../context/postContext\";\nimport Form from \"../common/Form\";\nimport \"../index.less\";\nimport { Field, ErrorMessage } from \"formik\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: 500,\n//     },\n//   },\n// }));\n\nexport default function PostForm() {\n  const { addPost, err, loading, success } = useContext(PostContext);\n  // const [error, setError] = useState(null);\n  // const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  // const [title, setTitle] = useState(\"\");\n  // const classes = useStyles();\n\n  // const handleClick = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleClose = (event, reason) => {\n  //   if (reason === \"clickaway\") return setOpen(false);\n  // };\n\n  // const handleTitleChange = async ({ currentTarget: input }) => {\n  //   setTitle(input.value);\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   addPost({ title: title, body: value });\n  //   handleClick();\n  // };\n\n  const schema = Yup.object().shape({\n    title: Yup.string().min(5).max(255).required().label(\"Title\"),\n    body: Yup.string().required().label(\"Body\"),\n  });\n\n  const handleSubmit = (post) => {\n    console.log(\"post\", post);\n    addPost(post);\n  };\n\n  return (\n    <div className=\"content\">\n      <Form\n        values={{ title: \"\", body: \"\" }}\n        schema={schema}\n        formTitle=\"Post Form\"\n        onSubmit={handleSubmit}\n        bodyValue={value}\n      >\n        <Field type=\"title\" name=\"title\" />\n        <ErrorMessage name=\"title\" component=\"div\" />\n        {/* <Field type=\"body\" name=\"body\" /> */}\n        <MDEditor value={value} onChange={setValue} />\n      </Form>\n      {/* <MDEditor.Markdown source={value} /> */}\n      {/* <SnackBar\n        message={error}\n        severity={error ? \"error\" : \"success\"}\n        success={success}\n        open={open}\n        onClose={handleClose}\n      /> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}