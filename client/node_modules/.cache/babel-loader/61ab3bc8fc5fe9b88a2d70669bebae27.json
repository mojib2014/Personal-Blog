{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Snack.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Snackbar, makeStyles } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst SnackBar = ({\n  error,\n  success\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: error ? \"error\" : \"success\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snack-details\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error ? error.data : success ? \"Successfuly submited.\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SnackBar, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SnackBar;\nexport default SnackBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"SnackBar\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Snack.js"],"names":["React","useState","Button","Snackbar","makeStyles","MuiAlert","Alert","props","useStyles","theme","root","width","marginTop","spacing","SnackBar","error","success","classes","open","setOpen","handleClick","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,K;AAIT,MAAME,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,CAAZ,CAAD,CAA5B;;AASA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA;;AACvC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMmB,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAEJ,KAAK,GAAG,OAAH,GAAa,SAAlC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAA,kBAAIA,KAAK,GAAGA,KAAK,CAACM,IAAT,GAAgBL,OAAO,GAAG,uBAAH,GAA6B;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdD;;GAAMF,Q;UACYN,S;;;MADZM,Q;AAgBN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Snackbar, makeStyles } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst SnackBar = ({ error, success }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  return (\n    <div className={error ? \"error\" : \"success\"}>\n      <div className=\"snack-details\">\n        <p>{error ? error.data : success ? \"Successfuly submited.\" : null}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SnackBar;\n"]},"metadata":{},"sourceType":"module"}