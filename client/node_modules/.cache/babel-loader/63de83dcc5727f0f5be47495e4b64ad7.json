{"ast":null,"code":"import auth0 from \"auth0-js\";\nimport history from \"./history\";\nexport default class Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: \"dev-yjc02h75.us.auth0.com\",\n      clientID: \"iUOtQKP9bSK5QemKj2qVx8xsLf6Hblki\",\n      redirectUri: \"http://localhost:3000/callback\",\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n    this.userProfile = {};\n\n    this.login = () => {\n      this.auth0.authorize();\n    };\n\n    this.handleAuth = () => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult) {\n          localStorage.setItem(\"access_token\", authResult.accessToken);\n          localStorage.setItem(\"id_token\", authResult.idToken);\n          let expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n          localStorage.setItem(\"expiresAt\", expiresAt);\n          this.getProfile();\n          setTimeout(() => {\n            history.replace(\"/authcheck\");\n          }, 600);\n        } else {\n          console.log(err);\n        }\n      });\n    };\n\n    this.getAccessToken = () => {\n      if (localStorage.getItem(\"access_token\")) {\n        const accessToken = localStorage.getItem(\"access_token\");\n        return accessToken;\n      } else {\n        return null;\n      }\n    };\n\n    this.getProfile = () => {\n      let accessToken = this.getAccessToken();\n\n      if (accessToken) {\n        this.auth0.client.userInfo(accessToken, (err, profile) => {\n          if (profile) {\n            this.userProfile = {\n              profile\n            };\n          }\n        });\n      }\n    };\n\n    this.logout = () => {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"expiresAt\");\n      setTimeout(() => {\n        history.replace(\"/authcheck\");\n      }, 200);\n    };\n\n    this.isAuthenticated = () => {\n      let expiresAt = JSON.parse(localStorage.getItem(\"expiresAt\"));\n      return new Date().getTime() < expiresAt;\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/utils/auth.js"],"names":["auth0","history","Auth","WebAuth","domain","clientID","redirectUri","responseType","scope","userProfile","login","authorize","handleAuth","parseHash","err","authResult","localStorage","setItem","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","setTimeout","replace","console","log","getAccessToken","getItem","client","userInfo","profile","logout","removeItem","isAuthenticated","parse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,IAAN,CAAW;AAAA;AAAA,SACxBF,KADwB,GAChB,IAAIA,KAAK,CAACG,OAAV,CAAkB;AACxBC,MAAAA,MAAM,EAAE,2BADgB;AAExBC,MAAAA,QAAQ,EAAE,kCAFc;AAGxBC,MAAAA,WAAW,EAAE,gCAHW;AAIxBC,MAAAA,YAAY,EAAE,gBAJU;AAKxBC,MAAAA,KAAK,EAAE;AALiB,KAAlB,CADgB;AAAA,SASxBC,WATwB,GASV,EATU;;AAAA,SAWxBC,KAXwB,GAWhB,MAAM;AACZ,WAAKV,KAAL,CAAWW,SAAX;AACD,KAbuB;;AAAA,SAexBC,UAfwB,GAeX,MAAM;AACjB,WAAKZ,KAAL,CAAWa,SAAX,CAAqB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACxC,YAAIA,UAAJ,EAAgB;AACdC,UAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,UAAU,CAACG,WAAhD;AACAF,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,UAAU,CAACI,OAA5C;AAEA,cAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CACdP,UAAU,CAACQ,SAAX,GAAuB,IAAvB,GAA8B,IAAIC,IAAJ,GAAWC,OAAX,EADhB,CAAhB;AAGAT,UAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCG,SAAlC;AAEA,eAAKM,UAAL;AACAC,UAAAA,UAAU,CAAC,MAAM;AACf1B,YAAAA,OAAO,CAAC2B,OAAR,CAAgB,YAAhB;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAbD,MAaO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACD;AACF,OAjBD;AAkBD,KAlCuB;;AAAA,SAoCxBiB,cApCwB,GAoCP,MAAM;AACrB,UAAIf,YAAY,CAACgB,OAAb,CAAqB,cAArB,CAAJ,EAA0C;AACxC,cAAMd,WAAW,GAAGF,YAAY,CAACgB,OAAb,CAAqB,cAArB,CAApB;AACA,eAAOd,WAAP;AACD,OAHD,MAGO;AACL,eAAO,IAAP;AACD;AACF,KA3CuB;;AAAA,SA6CxBQ,UA7CwB,GA6CX,MAAM;AACjB,UAAIR,WAAW,GAAG,KAAKa,cAAL,EAAlB;;AACA,UAAIb,WAAJ,EAAiB;AACf,aAAKlB,KAAL,CAAWiC,MAAX,CAAkBC,QAAlB,CAA2BhB,WAA3B,EAAwC,CAACJ,GAAD,EAAMqB,OAAN,KAAkB;AACxD,cAAIA,OAAJ,EAAa;AACX,iBAAK1B,WAAL,GAAmB;AAAE0B,cAAAA;AAAF,aAAnB;AACD;AACF,SAJD;AAKD;AACF,KAtDuB;;AAAA,SAwDxBC,MAxDwB,GAwDf,MAAM;AACbpB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,cAAxB;AACArB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,UAAxB;AACArB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,WAAxB;AACAV,MAAAA,UAAU,CAAC,MAAM;AACf1B,QAAAA,OAAO,CAAC2B,OAAR,CAAgB,YAAhB;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KA/DuB;;AAAA,SAiExBU,eAjEwB,GAiEN,MAAM;AACtB,UAAIlB,SAAS,GAAGC,IAAI,CAACkB,KAAL,CAAWvB,YAAY,CAACgB,OAAb,CAAqB,WAArB,CAAX,CAAhB;AACA,aAAO,IAAIR,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACD,KApEuB;AAAA;;AAAA","sourcesContent":["import auth0 from \"auth0-js\";\nimport history from \"./history\";\n\nexport default class Auth {\n  auth0 = new auth0.WebAuth({\n    domain: \"dev-yjc02h75.us.auth0.com\",\n    clientID: \"iUOtQKP9bSK5QemKj2qVx8xsLf6Hblki\",\n    redirectUri: \"http://localhost:3000/callback\",\n    responseType: \"token id_token\",\n    scope: \"openid profile email\",\n  });\n\n  userProfile = {};\n\n  login = () => {\n    this.auth0.authorize();\n  };\n\n  handleAuth = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult) {\n        localStorage.setItem(\"access_token\", authResult.accessToken);\n        localStorage.setItem(\"id_token\", authResult.idToken);\n\n        let expiresAt = JSON.stringify(\n          authResult.expiresIn * 1000 + new Date().getTime(),\n        );\n        localStorage.setItem(\"expiresAt\", expiresAt);\n\n        this.getProfile();\n        setTimeout(() => {\n          history.replace(\"/authcheck\");\n        }, 600);\n      } else {\n        console.log(err);\n      }\n    });\n  };\n\n  getAccessToken = () => {\n    if (localStorage.getItem(\"access_token\")) {\n      const accessToken = localStorage.getItem(\"access_token\");\n      return accessToken;\n    } else {\n      return null;\n    }\n  };\n\n  getProfile = () => {\n    let accessToken = this.getAccessToken();\n    if (accessToken) {\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\n        if (profile) {\n          this.userProfile = { profile };\n        }\n      });\n    }\n  };\n\n  logout = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expiresAt\");\n    setTimeout(() => {\n      history.replace(\"/authcheck\");\n    }, 200);\n  };\n\n  isAuthenticated = () => {\n    let expiresAt = JSON.parse(localStorage.getItem(\"expiresAt\"));\n    return new Date().getTime() < expiresAt;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}