{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/store/providers/UserProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { initialState, userReducer } from \"../reducers/userReducer\";\nimport UserContext from \"../../context/userContext\";\nimport userService from \"../../services/usersService\";\nimport authService from \"../../services/authService\";\nimport actionTypes from \"../actions/action_types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  const registerUser = async user => {\n    try {\n      dispatch({\n        type: actionTypes.LOADING\n      });\n      const {\n        data\n      } = await userService.registerUser(user);\n      return dispatch({\n        type: actionTypes.REGISTER,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: actionTypes.ERROR,\n        payload: err.response\n      });\n    }\n  };\n\n  const getUserByEmail = async email => {\n    try {\n      dispatch({\n        type: actionTypes.LOADING\n      });\n      const {\n        data\n      } = await userService.getUserByEmail(email);\n      return dispatch({\n        type: actionTypes.GET_USER_BY_EMAIL,\n        payload: data\n      });\n    } catch (err) {\n      return dispatch({\n        type: actionTypes.ERROR,\n        payload: err.response\n      });\n    }\n  };\n\n  const loginUser = (email, password) => {\n    dispatch({\n      type: actionTypes.LOADING\n    });\n    authService.login(email, password);\n    const user = jwtDecode.decode(jwt);\n  };\n\n  const getCurrentUser = () => {\n    return authService.getCurrentUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user: state.user,\n      loading: state.loading,\n      success: state.success,\n      error: state.error,\n      register: registerUser,\n      getUserByEmail,\n      getCurrentUser,\n      loginUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = UserProvider;\nexport default UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/store/providers/UserProvider.js"],"names":["useReducer","jwtDecode","initialState","userReducer","UserContext","userService","authService","actionTypes","UserProvider","children","state","dispatch","registerUser","user","type","LOADING","data","REGISTER","payload","err","ERROR","response","getUserByEmail","email","GET_USER_BY_EMAIL","loginUser","password","login","decode","jwt","getCurrentUser","loading","success","error","register"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,yBAA1C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACG,WAAD,EAAcD,YAAd,CAApC;;AAEA,QAAMU,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,QAAI;AACFF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACQ;AAApB,OAAD,CAAR;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMX,WAAW,CAACO,YAAZ,CAAyBC,IAAzB,CAAvB;AAEA,aAAOF,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACU,QAApB;AAA8BC,QAAAA,OAAO,EAAEF;AAAvC,OAAD,CAAf;AACD,KAND,CAME,OAAOG,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACa,KAApB;AAA2BF,QAAAA,OAAO,EAAEC,GAAG,CAACE;AAAxC,OAAD,CAAR;AACD;AACF,GAVD;;AAYA,QAAMC,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACtC,QAAI;AACFZ,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACQ;AAApB,OAAD,CAAR;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMX,WAAW,CAACiB,cAAZ,CAA2BC,KAA3B,CAAvB;AAEA,aAAOZ,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACiB,iBAApB;AAAuCN,QAAAA,OAAO,EAAEF;AAAhD,OAAD,CAAf;AACD,KAND,CAME,OAAOG,GAAP,EAAY;AACZ,aAAOR,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACa,KAApB;AAA2BF,QAAAA,OAAO,EAAEC,GAAG,CAACE;AAAxC,OAAD,CAAf;AACD;AACF,GAVD;;AAYA,QAAMI,SAAS,GAAG,CAACF,KAAD,EAAQG,QAAR,KAAqB;AACrCf,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,WAAW,CAACQ;AAApB,KAAD,CAAR;AACAT,IAAAA,WAAW,CAACqB,KAAZ,CAAkBJ,KAAlB,EAAyBG,QAAzB;AACA,UAAMb,IAAI,GAAGZ,SAAS,CAAC2B,MAAV,CAAiBC,GAAjB,CAAb;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAG,MAAM;AAC3B,WAAOxB,WAAW,CAACwB,cAAZ,EAAP;AACD,GAFD;;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLjB,MAAAA,IAAI,EAAEH,KAAK,CAACG,IADP;AAELkB,MAAAA,OAAO,EAAErB,KAAK,CAACqB,OAFV;AAGLC,MAAAA,OAAO,EAAEtB,KAAK,CAACsB,OAHV;AAILC,MAAAA,KAAK,EAAEvB,KAAK,CAACuB,KAJR;AAKLC,MAAAA,QAAQ,EAAEtB,YALL;AAMLU,MAAAA,cANK;AAOLQ,MAAAA,cAPK;AAQLL,MAAAA;AARK,KADT;AAAA,cAYGhB;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApDD;;GAAMD,Y;;KAAAA,Y;AAsDN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { initialState, userReducer } from \"../reducers/userReducer\";\nimport UserContext from \"../../context/userContext\";\nimport userService from \"../../services/usersService\";\nimport authService from \"../../services/authService\";\nimport actionTypes from \"../actions/action_types\";\n\nconst UserProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  const registerUser = async (user) => {\n    try {\n      dispatch({ type: actionTypes.LOADING });\n\n      const { data } = await userService.registerUser(user);\n\n      return dispatch({ type: actionTypes.REGISTER, payload: data });\n    } catch (err) {\n      dispatch({ type: actionTypes.ERROR, payload: err.response });\n    }\n  };\n\n  const getUserByEmail = async (email) => {\n    try {\n      dispatch({ type: actionTypes.LOADING });\n\n      const { data } = await userService.getUserByEmail(email);\n\n      return dispatch({ type: actionTypes.GET_USER_BY_EMAIL, payload: data });\n    } catch (err) {\n      return dispatch({ type: actionTypes.ERROR, payload: err.response });\n    }\n  };\n\n  const loginUser = (email, password) => {\n    dispatch({ type: actionTypes.LOADING });\n    authService.login(email, password);\n    const user = jwtDecode.decode(jwt);\n  };\n\n  const getCurrentUser = () => {\n    return authService.getCurrentUser();\n  };\n  return (\n    <UserContext.Provider\n      value={{\n        user: state.user,\n        loading: state.loading,\n        success: state.success,\n        error: state.error,\n        register: registerUser,\n        getUserByEmail,\n        getCurrentUser,\n        loginUser,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserProvider;\n"]},"metadata":{},"sourceType":"module"}