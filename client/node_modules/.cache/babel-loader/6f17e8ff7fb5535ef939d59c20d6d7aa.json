{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { EditorContext } from '../../Context';\nimport Child from './Child';\nimport \"./index.css\";\nexport function ToolbarItems(props) {\n  var prefixCls = props.prefixCls;\n\n  var _useContext = useContext(EditorContext),\n      fullscreen = _useContext.fullscreen,\n      preview = _useContext.preview,\n      _useContext$barPopup = _useContext.barPopup,\n      barPopup = _useContext$barPopup === void 0 ? {} : _useContext$barPopup,\n      commandOrchestrator = _useContext.commandOrchestrator,\n      dispatch = _useContext.dispatch;\n\n  function handleClick(command, name) {\n    if (!dispatch) return;\n    var state = {\n      barPopup: _objectSpread({}, barPopup)\n    };\n\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value;\n    }\n\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach(function (item) {\n        if (name === item.groupName) {\n          state.barPopup[name] = true;\n        } else if (item.keyCommand) {\n          state.barPopup[item.groupName] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach(function (keyName) {\n        state.barPopup[keyName] = false;\n      });\n    }\n\n    if (Object.keys(state).length) {\n      dispatch(_objectSpread({}, state));\n    }\n\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n\n  useEffect(function () {\n    if (document) {\n      document.body.style.overflow = !fullscreen ? 'initial' : 'hidden';\n    }\n  }, [fullscreen]);\n  return /*#__PURE__*/React.createElement(\"ul\", null, (props.commands || []).map(function (item, idx) {\n    if (item.keyCommand === 'divider') {\n      return /*#__PURE__*/React.createElement(\"li\", _extends({\n        key: idx\n      }, item.liProps, {\n        className: \"\".concat(prefixCls, \"-toolbar-divider\")\n      }));\n    }\n\n    if (!item.keyCommand) return /*#__PURE__*/React.createElement(Fragment, null);\n    var activeBtn = fullscreen && item.keyCommand === 'fullscreen' || item.keyCommand === 'preview' && preview === item.value;\n    var childNode = item.children && typeof item.children === 'function' ? item.children({\n      getState: function getState() {\n        return commandOrchestrator.getState();\n      },\n      textApi: commandOrchestrator ? commandOrchestrator.textApi : undefined,\n      close: function close() {\n        return handleClick({}, item.groupName);\n      },\n      execute: function execute() {\n        return handleClick({\n          execute: item.execute\n        });\n      }\n    }) : undefined;\n    var disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n    return /*#__PURE__*/React.createElement(\"li\", _extends({\n      key: idx\n    }, item.liProps, {\n      className: activeBtn ? \"active\" : ''\n    }), !item.buttonProps && item.icon, item.buttonProps && /*#__PURE__*/React.createElement('button', _objectSpread(_objectSpread({\n      type: 'button',\n      disabled: disabled,\n      'data-name': item.name\n    }, item.buttonProps), {}, {\n      onClick: function onClick(evn) {\n        evn.stopPropagation();\n        handleClick(item, item.groupName);\n      }\n    }), item.icon), item.children && /*#__PURE__*/React.createElement(Child, {\n      groupName: item.groupName,\n      prefixCls: prefixCls,\n      children: childNode,\n      commands: Array.isArray(item.children) ? item.children : undefined\n    }));\n  }));\n}\nexport default function Toolbar() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var prefixCls = props.prefixCls,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 29 : _props$height,\n      isChild = props.isChild;\n\n  var _useContext2 = useContext(EditorContext),\n      commands = _useContext2.commands,\n      extraCommands = _useContext2.extraCommands;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-toolbar\"),\n    style: {\n      height: height\n    }\n  }, /*#__PURE__*/React.createElement(ToolbarItems, _extends({}, props, {\n    commands: props.commands || commands || []\n  })), !isChild && /*#__PURE__*/React.createElement(ToolbarItems, _extends({}, props, {\n    commands: extraCommands || []\n  })));\n}","map":{"version":3,"sources":["../../../../src/components/Toolbar/index.tsx"],"names":["prefixCls","props","fullscreen","preview","barPopup","commandOrchestrator","dispatch","useContext","state","command","name","item","Object","useEffect","document","idx","activeBtn","childNode","getState","textApi","close","handleClick","execute","disabled","type","onClick","evn","Array","undefined","height","isChild","commands","extraCommands"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { IProps } from '../../utils';\nimport { EditorContext, PreviewType, ContextStore } from '../../Context';\nimport { ICommand } from '../../commands';\nimport Child from './Child';\nimport './index.less';\n\nexport interface IToolbarProps extends IProps {\n  height?: React.CSSProperties['height'];\n  onCommand?: (command: ICommand<string>, groupName?: string) => void;\n  commands?: ICommand<string>[];\n  isChild?: boolean;\n}\n\nexport function ToolbarItems(props: IToolbarProps) {\n  const { prefixCls } = props;\n  const { fullscreen, preview, barPopup = {}, commandOrchestrator, dispatch } = useContext(EditorContext);\n  function handleClick(command: ICommand<string>, name?: string) {\n    if (!dispatch) return;\n    const state: ContextStore = { barPopup: { ...barPopup } };\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value as PreviewType;\n    }\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach((item) => {\n        if (name === item.groupName) {\n          state.barPopup![name!] = true;\n        } else if (item.keyCommand) {\n          state.barPopup![item.groupName!] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach((keyName) => {\n        state.barPopup![keyName] = false;\n      });\n    }\n\n    if (Object.keys(state).length) {\n      dispatch({ ...state });\n    }\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n\n  useEffect(() => {\n    if (document) {\n      document.body.style.overflow = !fullscreen ? 'initial' : 'hidden';\n    }\n  }, [fullscreen]);\n\n  return (\n    <ul>\n      {(props.commands || []).map((item, idx) => {\n        if (item.keyCommand === 'divider') {\n          return <li key={idx} {...item.liProps} className={`${prefixCls}-toolbar-divider`} />;\n        }\n        if (!item.keyCommand) return <Fragment />;\n        const activeBtn =\n          (fullscreen && item.keyCommand === 'fullscreen') || (item.keyCommand === 'preview' && preview === item.value);\n        const childNode =\n          item.children && typeof item.children === 'function'\n            ? item.children({\n                getState: () => commandOrchestrator!.getState(),\n                textApi: commandOrchestrator ? commandOrchestrator!.textApi : undefined,\n                close: () => handleClick({}, item.groupName),\n                execute: () => handleClick({ execute: item.execute }),\n              })\n            : undefined;\n        const disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n        return (\n          <li key={idx} {...item.liProps} className={activeBtn ? `active` : ''}>\n            {!item.buttonProps && item.icon}\n            {item.buttonProps &&\n              React.createElement(\n                'button',\n                {\n                  type: 'button',\n                  disabled,\n                  'data-name': item.name,\n                  ...item.buttonProps,\n                  onClick: (evn: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                    evn.stopPropagation();\n                    handleClick(item, item.groupName);\n                  },\n                },\n                item.icon,\n              )}\n            {item.children && (\n              <Child\n                groupName={item.groupName}\n                prefixCls={prefixCls}\n                children={childNode}\n                commands={Array.isArray(item.children) ? item.children : undefined}\n              />\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default function Toolbar(props: IToolbarProps = {}) {\n  const { prefixCls, height = 29, isChild } = props;\n  const { commands, extraCommands } = useContext(EditorContext);\n  return (\n    <div className={`${prefixCls}-toolbar`} style={{ height }}>\n      <ToolbarItems {...props} commands={props.commands || commands || []} />\n      {!isChild && <ToolbarItems {...props} commands={extraCommands || []} />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}