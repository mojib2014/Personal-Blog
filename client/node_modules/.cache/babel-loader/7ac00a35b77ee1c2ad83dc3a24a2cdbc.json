{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/pages/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { CssBaseline, Typography, Grid, makeStyles } from \"@material-ui/core\";\nimport Layout from \"../common/Layout\";\nimport PostCard from \"../common/Card/PostCard\";\nimport SnackBar from \"../common/SnackBar\";\nimport useSnackState from \"../hooks/useSnackState\";\nimport Spiner from \"../common/Spiner\";\nimport { PostContext } from \"../context/postContext\";\nimport userService from \"../../services/usersService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  gridContainer: {\n    alignContent: \"stretch\",\n    alignItems: \"stretch\"\n  },\n  gridItems: {\n    alignSelf: \"auto\"\n  }\n});\n\nconst Posts = () => {\n  _s();\n\n  const {\n    posts,\n    loading,\n    success,\n    error,\n    getPosts\n  } = useContext(PostContext);\n  const [open, handleClose, handleOpen] = useSnackState();\n  const [author, setAuthor] = useState({});\n  const classes = useStyles();\n  /* eslint-disable */\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  useEffect(() => {\n    if (error) handleOpen();\n  }, [error]);\n  /* eslint-disable  */\n\n  useEffect(async () => {\n    getUser(item.author);\n  }, [item.author]);\n  /* eslint-enable */\n\n  const getUser = async id => {\n    const {\n      data\n    } = await userService.getUserById(id);\n    setUser(data);\n  };\n  /* eslint-enable */\n\n\n  if (!success && loading) return /*#__PURE__*/_jsxDEV(Spiner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 35\n  }, this);\n  if (!posts.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There are no posts\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"div\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Trending Posts in JavaScripit & JavaScript frameworks \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.gridContainer,\n        children: posts.map(i => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          className: classes.gridItems,\n          children: /*#__PURE__*/_jsxDEV(PostCard, {\n            item: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, i.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(SnackBar, {\n      open: open,\n      severity: error ? \"error\" : \"success\",\n      err: error,\n      success: success,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Posts, \"X6Y4Tgq2rgImmrnZU3UBksOFzPg=\", false, function () {\n  return [useSnackState, useStyles];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/pages/Posts.jsx"],"names":["React","useEffect","useState","useContext","CssBaseline","Typography","Grid","makeStyles","Layout","PostCard","SnackBar","useSnackState","Spiner","PostContext","userService","useStyles","gridContainer","alignContent","alignItems","gridItems","alignSelf","Posts","posts","loading","success","error","getPosts","open","handleClose","handleOpen","author","setAuthor","classes","getUser","item","id","data","getUserById","setUser","length","map","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { CssBaseline, Typography, Grid, makeStyles } from \"@material-ui/core\";\n\nimport Layout from \"../common/Layout\";\nimport PostCard from \"../common/Card/PostCard\";\nimport SnackBar from \"../common/SnackBar\";\nimport useSnackState from \"../hooks/useSnackState\";\nimport Spiner from \"../common/Spiner\";\nimport { PostContext } from \"../context/postContext\";\nimport userService from \"../../services/usersService\";\n\nconst useStyles = makeStyles({\n  gridContainer: {\n    alignContent: \"stretch\",\n    alignItems: \"stretch\",\n  },\n  gridItems: {\n    alignSelf: \"auto\",\n  },\n});\n\nconst Posts = () => {\n  const { posts, loading, success, error, getPosts } = useContext(PostContext);\n  const [open, handleClose, handleOpen] = useSnackState();\n  const [author, setAuthor] = useState({});\n\n  const classes = useStyles();\n\n  /* eslint-disable */\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    if (error) handleOpen();\n  }, [error]);\n\n  /* eslint-disable  */\n  useEffect(async () => {\n    getUser(item.author);\n  }, [item.author]);\n  /* eslint-enable */\n\n  const getUser = async (id) => {\n    const { data } = await userService.getUserById(id);\n    setUser(data);\n  };\n  /* eslint-enable */\n  if (!success && loading) return <Spiner />;\n\n  if (!posts.length) return <p>There are no posts</p>;\n\n  return (\n    <>\n      <CssBaseline />\n      <Layout>\n        <Typography component=\"div\" align=\"center\">\n          <h1>Trending Posts in JavaScripit & JavaScript frameworks </h1>\n        </Typography>\n        <Grid container spacing={2} className={classes.gridContainer}>\n          {posts.map((i) => (\n            <Grid item xs={3} key={i.id} className={classes.gridItems}>\n              <PostCard item={i} />\n            </Grid>\n          ))}\n        </Grid>\n      </Layout>\n      {error && (\n        <SnackBar\n          open={open}\n          severity={error ? \"error\" : \"success\"}\n          err={error}\n          success={success}\n          onClose={handleClose}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}