{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"onScroll\", \"renderTextarea\"];\nimport React, { useEffect, Fragment, useContext } from 'react';\nimport { EditorContext } from '../../Context';\nimport shortcuts from './shortcuts';\nimport Markdown from './Markdown';\nimport Textarea from './Textarea';\nimport { TextAreaCommandOrchestrator } from '../../commands';\nimport \"./index.css\";\nexport default function TextArea(props) {\n  var _ref = props || {},\n      prefixCls = _ref.prefixCls,\n      className = _ref.className,\n      onScroll = _ref.onScroll,\n      renderTextarea = _ref.renderTextarea,\n      otherProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(EditorContext),\n      markdown = _useContext.markdown,\n      scrollTop = _useContext.scrollTop,\n      commands = _useContext.commands,\n      extraCommands = _useContext.extraCommands,\n      onChange = _useContext.onChange,\n      dispatch = _useContext.dispatch;\n\n  var textRef = React.useRef(null);\n  var executeRef = React.useRef();\n  var warp = /*#__PURE__*/React.createRef();\n  useEffect(function () {\n    var state = {};\n\n    if (warp.current) {\n      state.textareaWarp = warp.current || undefined;\n      warp.current.scrollTop = scrollTop || 0;\n    }\n\n    if (dispatch) {\n      dispatch(_objectSpread({}, state));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(function () {\n    if (textRef.current && dispatch) {\n      var _commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\n\n      executeRef.current = _commandOrchestrator;\n      dispatch({\n        textarea: textRef.current,\n        commandOrchestrator: _commandOrchestrator\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: warp,\n    className: \"\".concat(prefixCls, \"-aree \").concat(className || ''),\n    onScroll: onScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-text\")\n  }, renderTextarea ? /*#__PURE__*/React.cloneElement(renderTextarea(_objectSpread(_objectSpread({}, otherProps), {}, {\n    value: markdown,\n    autoComplete: 'off',\n    autoCorrect: 'off',\n    spellCheck: 'false',\n    autoCapitalize: 'off',\n    className: \"\".concat(prefixCls, \"-text-input\"),\n    style: {\n      WebkitTextFillColor: 'inherit',\n      overflow: 'auto'\n    }\n  }), {\n    dispatch: dispatch,\n    onChange: onChange,\n    shortcuts: shortcuts,\n    useContext: {\n      commands: commands,\n      extraCommands: extraCommands,\n      commandOrchestrator: executeRef.current\n    }\n  }), {\n    ref: textRef\n  }) : /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(Markdown, {\n    prefixCls: prefixCls\n  }), /*#__PURE__*/React.createElement(Textarea, _extends({\n    prefixCls: prefixCls\n  }, otherProps)))));\n}","map":{"version":3,"sources":["../../../../src/components/TextArea/index.tsx"],"names":["prefixCls","className","onScroll","renderTextarea","otherProps","props","markdown","scrollTop","commands","extraCommands","onChange","dispatch","useContext","textRef","React","executeRef","warp","useEffect","state","commandOrchestrator","textarea","value","autoComplete","autoCorrect","spellCheck","autoCapitalize","style","WebkitTextFillColor","overflow","shortcuts","current","ref"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, useContext } from 'react';\nimport { EditorContext, ContextStore, ExecuteCommandState } from '../../Context';\nimport shortcuts from './shortcuts';\nimport Markdown from './Markdown';\nimport Textarea from './Textarea';\nimport { IProps } from '../../utils';\nimport { MDEditorProps } from '../../Editor';\nimport { TextAreaCommandOrchestrator, ICommand } from '../../commands';\nimport './index.less';\n\ntype RenderTextareaHandle = {\n  dispatch: ContextStore['dispatch'];\n  onChange?: MDEditorProps['onChange'];\n  useContext?: {\n    commands: ContextStore['commands'];\n    extraCommands: ContextStore['extraCommands'];\n    commandOrchestrator?: TextAreaCommandOrchestrator;\n  };\n  shortcuts?: (\n    e: KeyboardEvent | React.KeyboardEvent<HTMLTextAreaElement>,\n    commands: ICommand[],\n    commandOrchestrator?: TextAreaCommandOrchestrator,\n    dispatch?: React.Dispatch<ContextStore>,\n    state?: ExecuteCommandState,\n  ) => void;\n};\n\nexport interface ITextAreaProps\n  extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, 'value' | 'onChange' | 'onScroll'>,\n    IProps {\n  value?: string;\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  renderTextarea?: (\n    props: React.TextareaHTMLAttributes<HTMLTextAreaElement> | React.HTMLAttributes<HTMLDivElement>,\n    opts: RenderTextareaHandle,\n  ) => JSX.Element;\n}\n\nexport type TextAreaRef = {\n  text?: HTMLTextAreaElement;\n  warp?: HTMLDivElement;\n};\n\nexport default function TextArea(props: ITextAreaProps) {\n  const { prefixCls, className, onScroll, renderTextarea, ...otherProps } = props || {};\n  const { markdown, scrollTop, commands, extraCommands, onChange, dispatch } = useContext(EditorContext);\n  const textRef = React.useRef<HTMLTextAreaElement>(null);\n  const executeRef = React.useRef<TextAreaCommandOrchestrator>();\n  const warp = React.createRef<HTMLDivElement>();\n  useEffect(() => {\n    const state: ContextStore = {};\n    if (warp.current) {\n      state.textareaWarp = warp.current || undefined;\n      warp.current.scrollTop = scrollTop || 0;\n    }\n    if (dispatch) {\n      dispatch({ ...state });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (textRef.current && dispatch) {\n      const commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\n      executeRef.current = commandOrchestrator;\n      dispatch({ textarea: textRef.current, commandOrchestrator });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div ref={warp} className={`${prefixCls}-aree ${className || ''}`} onScroll={onScroll}>\n      <div className={`${prefixCls}-text`}>\n        {renderTextarea ? (\n          React.cloneElement(\n            renderTextarea(\n              {\n                ...otherProps,\n                value: markdown,\n                autoComplete: 'off',\n                autoCorrect: 'off',\n                spellCheck: 'false',\n                autoCapitalize: 'off',\n                className: `${prefixCls}-text-input`,\n                style: {\n                  WebkitTextFillColor: 'inherit',\n                  overflow: 'auto',\n                },\n              },\n              {\n                dispatch,\n                onChange,\n                shortcuts,\n                useContext: { commands, extraCommands, commandOrchestrator: executeRef.current },\n              },\n            ),\n            {\n              ref: textRef,\n            },\n          )\n        ) : (\n          <Fragment>\n            <Markdown prefixCls={prefixCls} />\n            <Textarea prefixCls={prefixCls} {...otherProps} />\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}