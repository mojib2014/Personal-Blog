{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport UserContext from \"../context/userContext\";\nimport SnackBar from \"../common/SnackBar\";\nimport UseForm from \"../hooks/useForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500\n    }\n  }\n}));\n\nconst RegisterForm = () => {\n  _s();\n\n  const {\n    loading,\n    success,\n    error,\n    register\n  } = useContext(UserContext);\n  const classes = useStyles();\n  const values = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const schema = Yup.object().shape({\n    first_name: Yup.string().min(4).max(20).required().label(\"First Name\"),\n    last_name: Yup.string().min(4).max(20).required().label(\"Last Name\"),\n    email: Yup.string().email().required().label(\"Email\"),\n    password: Yup.string().min(6).required().label(\"password\")\n  });\n\n  const handleSubmit = values => {\n    register(values);\n  };\n\n  const [formik, handleClose, open] = UseForm(values, schema, handleSubmit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: classes.root,\n        style: {\n          width: \"500px\",\n          margin: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"first_name\",\n          name: \"first_name\",\n          label: \"First Name\",\n          type: \"name\",\n          value: formik.values[\"name\"],\n          onChange: formik.handleChange,\n          error: formik.touched.first_name && Boolean(formik.errors.first_name),\n          helperText: formik.touched.first_name && formik.errors.first_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"last_name\",\n          name: \"last_name\",\n          label: \"Last Name\",\n          type: \"name\",\n          value: formik.values.last_name,\n          onChange: formik.handleChange,\n          error: formik.touched.last_name && Boolean(formik.errors.last_name),\n          helperText: formik.touched.last_name && formik.errors.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"email\",\n          name: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          helperText: formik.touched.password && formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          children: loading ? \"loading...\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      err: error,\n      success: success,\n      severity: error ? \"error\" : \"Successfuly submited!\",\n      onClose: handleClose,\n      open: open\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"VL565k2DH9qFQP1G2hC7drRQJZ8=\", false, function () {\n  return [useStyles];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/RegisterForm.jsx"],"names":["React","useContext","Yup","TextField","Button","makeStyles","UserContext","SnackBar","UseForm","useStyles","theme","root","margin","spacing","width","RegisterForm","loading","success","error","register","classes","values","first_name","last_name","email","password","schema","object","shape","string","min","max","required","label","handleSubmit","formik","handleClose","open","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport UserContext from \"../context/userContext\";\nimport SnackBar from \"../common/SnackBar\";\nimport UseForm from \"../hooks/useForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500,\n    },\n  },\n}));\n\nconst RegisterForm = () => {\n  const { loading, success, error, register } = useContext(UserContext);\n  const classes = useStyles();\n\n  const values = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const schema = Yup.object().shape({\n    first_name: Yup.string().min(4).max(20).required().label(\"First Name\"),\n    last_name: Yup.string().min(4).max(20).required().label(\"Last Name\"),\n    email: Yup.string().email().required().label(\"Email\"),\n    password: Yup.string().min(6).required().label(\"password\"),\n  });\n\n  const handleSubmit = (values) => {\n    register(values);\n  };\n\n  const [formik, handleClose, open] = UseForm(values, schema, handleSubmit);\n\n  return (\n    <div className=\"content\">\n      <h1>Register Form</h1>\n      <div className=\"form-content\">\n        <form\n          onSubmit={formik.handleSubmit}\n          className={classes.root}\n          style={{ width: \"500px\", margin: \"auto\" }}\n        >\n          <TextField\n            fullWidth\n            id=\"first_name\"\n            name=\"first_name\"\n            label=\"First Name\"\n            type=\"name\"\n            value={formik.values[\"name\"]}\n            onChange={formik.handleChange}\n            error={\n              formik.touched.first_name && Boolean(formik.errors.first_name)\n            }\n            helperText={formik.touched.first_name && formik.errors.first_name}\n          />\n          <TextField\n            fullWidth\n            id=\"last_name\"\n            name=\"last_name\"\n            label=\"Last Name\"\n            type=\"name\"\n            value={formik.values.last_name}\n            onChange={formik.handleChange}\n            error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n            helperText={formik.touched.last_name && formik.errors.last_name}\n          />\n          <TextField\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            fullWidth\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            {loading ? \"loading...\" : \"Register\"}\n          </Button>\n        </form>\n      </div>\n      <SnackBar\n        err={error}\n        success={success}\n        severity={error ? \"error\" : \"Successfuly submited!\"}\n        onClose={handleClose}\n        open={open}\n      />\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}