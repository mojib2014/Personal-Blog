{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport UserContext from \"../context/userContext\";\nimport Snack from \"../common/Snack\";\nimport Form from \"../common/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    loading,\n    success,\n    error,\n    register\n  } = useContext(UserContext);\n  const RegisterSchema = Yup.object().shape({\n    first_name: Yup.string(\"Enter your first name\").min(4, \"First Name should be of minimum 4 characters\").max(20, \"First Name should be of maximum 20 characters length\").required(\"First name is required\"),\n    last_name: Yup.string(\"Enter your last name\").min(4, \"Last Name should be of minimum 4 characters\").max(20, \"First Name should be of maximum 20 characters length\").required(\"Last Name is required\"),\n    email: Yup.string(\"Enter your email\").email(\"Enter a valid email\").required(\"Email is required\"),\n    password: Yup.string(\"Enter your password\").min(6, \"Password should be of minimum 6 characters length\").required(\"Password is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: values => {\n      register(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snack, {\n      error: error,\n      success: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      initialValues: [{\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\"\n      }],\n      loading: loading,\n      schema: RegisterSchema,\n      register: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"/au2F2Jnh1gOMTyStCCRij6eKBE=\", false, function () {\n  return [useFormik];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/Home.js"],"names":["React","useContext","useFormik","Yup","Button","TextField","UserContext","Snack","Form","Home","loading","success","error","register","RegisterSchema","object","shape","first_name","string","min","max","required","last_name","email","password","formik","initialValues","validationSchema","onSubmit","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAwCZ,UAAU,CAACK,WAAD,CAAxD;AAEA,QAAMQ,cAAc,GAAGX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,IAAAA,UAAU,EAAEd,GAAG,CAACe,MAAJ,CAAW,uBAAX,EACTC,GADS,CACL,CADK,EACF,8CADE,EAETC,GAFS,CAEL,EAFK,EAED,sDAFC,EAGTC,QAHS,CAGA,wBAHA,CAD4B;AAKxCC,IAAAA,SAAS,EAAEnB,GAAG,CAACe,MAAJ,CAAW,sBAAX,EACRC,GADQ,CACJ,CADI,EACD,6CADC,EAERC,GAFQ,CAEJ,EAFI,EAEA,sDAFA,EAGRC,QAHQ,CAGC,uBAHD,CAL6B;AASxCE,IAAAA,KAAK,EAAEpB,GAAG,CAACe,MAAJ,CAAW,kBAAX,EACJK,KADI,CACE,qBADF,EAEJF,QAFI,CAEK,mBAFL,CATiC;AAYxCG,IAAAA,QAAQ,EAAErB,GAAG,CAACe,MAAJ,CAAW,qBAAX,EACPC,GADO,CACH,CADG,EACA,mDADA,EAEPE,QAFO,CAEE,sBAFF;AAZ8B,GAAnB,CAAvB;AAiBA,QAAMI,MAAM,GAAGvB,SAAS,CAAC;AACvBwB,IAAAA,aAAa,EAAE;AACbT,MAAAA,UAAU,EAAE,EADC;AAEbK,MAAAA,SAAS,EAAE,EAFE;AAGbC,MAAAA,KAAK,EAAE,EAHM;AAIbC,MAAAA,QAAQ,EAAE;AAJG,KADQ;AAOvBG,IAAAA,gBAAgB,EAAEb,cAPK;AAQvBc,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBhB,MAAAA,QAAQ,CAACgB,MAAD,CAAR;AACD;AAVsB,GAAD,CAAxB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,KAAd;AAAqB,MAAA,OAAO,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AACE,MAAA,aAAa,EAAE,CACb;AACEM,QAAAA,UAAU,EAAE,EADd;AAEEK,QAAAA,SAAS,EAAE,EAFb;AAGEC,QAAAA,KAAK,EAAE,EAHT;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OADa,CADjB;AASE,MAAA,OAAO,EAAEd,OATX;AAUE,MAAA,MAAM,EAAEI,cAVV;AAWE,MAAA,QAAQ,EAAED;AAXZ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgED,CAjGD;;GAAMJ,I;UAoBWP,S;;;KApBXO,I;AAmGN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport UserContext from \"../context/userContext\";\nimport Snack from \"../common/Snack\";\nimport Form from \"../common/Form\";\n\nconst Home = () => {\n  const { loading, success, error, register } = useContext(UserContext);\n\n  const RegisterSchema = Yup.object().shape({\n    first_name: Yup.string(\"Enter your first name\")\n      .min(4, \"First Name should be of minimum 4 characters\")\n      .max(20, \"First Name should be of maximum 20 characters length\")\n      .required(\"First name is required\"),\n    last_name: Yup.string(\"Enter your last name\")\n      .min(4, \"Last Name should be of minimum 4 characters\")\n      .max(20, \"First Name should be of maximum 20 characters length\")\n      .required(\"Last Name is required\"),\n    email: Yup.string(\"Enter your email\")\n      .email(\"Enter a valid email\")\n      .required(\"Email is required\"),\n    password: Yup.string(\"Enter your password\")\n      .min(6, \"Password should be of minimum 6 characters length\")\n      .required(\"Password is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: (values) => {\n      register(values);\n    },\n  });\n\n  return (\n    <div className=\"content\">\n      <h1>Register Form</h1>\n      <Snack error={error} success={success} />\n      <Form\n        initialValues={[\n          {\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            password: \"\",\n          },\n        ]}\n        loading={loading}\n        schema={RegisterSchema}\n        register={register}\n      />\n      {/* <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"first_name\"\n          name=\"first_name\"\n          label=\"First Name\"\n          value={formik.values[\"name\"]}\n          onChange={formik.handleChange}\n          error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n          helperText={formik.touched.first_name && formik.errors.first_name}\n        />\n        <TextField\n          fullWidth\n          id=\"last_name\"\n          name=\"last_name\"\n          label=\"Last Name\"\n          value={formik.values.last_name}\n          onChange={formik.handleChange}\n          error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n          helperText={formik.touched.last_name && formik.errors.last_name}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          {loading ? \"loading...\" : \"Register\"}\n        </Button>\n      </form> */}\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}