{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Card/PostCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"@material-ui/core\";\nimport { CardHeader, CardMedia, CardContent, CardActions, IconButton, Typography } from \"@material-ui/core\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport formatDate from \"../../utils/formatDate\";\nimport getReadingTime from \"../../utils/getReadingTime\";\nimport Cardheader from \"../CardHeader/CardHeader\";\nimport formatSlug from \"../../utils/formatSlug\";\nimport useStyles from \"./styles\";\nimport auth from \"../../services/authService\";\nimport Like from \"../Like\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  item,\n  onLike,\n  onDisLike\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [like, setLike] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, []);\n\n  const handleLike = item => {\n    if (item.like_user_id.includes(currentUser.id)) {\n      setLike(false);\n      onDisLike(currentUser.id, item.id);\n    } else {\n      setLike(true);\n      onLike(currentUser.id, item.id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Cardheader, {\n      item: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n      title: item.title,\n      subheader: formatDate(item.created)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: \"/images/my-image.JPG\",\n      title: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: item.sub_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      className: classes.cardActions,\n      children: [/*#__PURE__*/_jsxDEV(Like, {\n        item: item,\n        currentUser: currentUser,\n        handleLike: handleLike,\n        like: like\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"share\",\n        children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        href: `/posts/${formatSlug(item.title)}/${item.id}`,\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getReadingTime(item.body)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostCard, \"zzFKbfzP3oRFd85LWZmsoLugPxk=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostCard;\nexport default PostCard;\nPostCard.propTypes = {\n  item: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n  onDisLike: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/common/Card/PostCard.jsx"],"names":["useState","useEffect","PropTypes","Card","Button","CardHeader","CardMedia","CardContent","CardActions","IconButton","Typography","ShareIcon","formatDate","getReadingTime","Cardheader","formatSlug","useStyles","auth","Like","PostCard","item","onLike","onDisLike","currentUser","setCurrentUser","like","setLike","classes","getCurrentUser","handleLike","like_user_id","includes","id","root","title","created","media","sub_title","cardActions","body","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"@material-ui/core\";\nimport {\n  CardHeader,\n  CardMedia,\n  CardContent,\n  CardActions,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport formatDate from \"../../utils/formatDate\";\nimport getReadingTime from \"../../utils/getReadingTime\";\nimport Cardheader from \"../CardHeader/CardHeader\";\nimport formatSlug from \"../../utils/formatSlug\";\nimport useStyles from \"./styles\";\n\nimport auth from \"../../services/authService\";\nimport Like from \"../Like\";\n\nconst PostCard = ({ item, onLike, onDisLike }) => {\n  const [currentUser, setCurrentUser] = useState({});\n  const [like, setLike] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, []);\n\n  const handleLike = (item) => {\n    if (item.like_user_id.includes(currentUser.id)) {\n      setLike(false);\n      onDisLike(currentUser.id, item.id);\n    } else {\n      setLike(true);\n      onLike(currentUser.id, item.id);\n    }\n  };\n\n  return (\n    <Card className={classes.root}>\n      <Cardheader item={item} />\n      <CardHeader title={item.title} subheader={formatDate(item.created)} />\n      <CardMedia\n        className={classes.media}\n        image=\"/images/my-image.JPG\"\n        title={item.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {item.sub_title}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardActions}>\n        <Like\n          item={item}\n          currentUser={currentUser}\n          handleLike={handleLike}\n          like={like}\n        />\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          href={`/posts/${formatSlug(item.title)}/${item.id}`}\n        >\n          Read\n        </Button>\n        <p>{getReadingTime(item.body)}</p>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default PostCard;\n\nPostCard.propTypes = {\n  item: PropTypes.object.isRequired,\n  onLike: PropTypes.func.isRequired,\n  onDisLike: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}