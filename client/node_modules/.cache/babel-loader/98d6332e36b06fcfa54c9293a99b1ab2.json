{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { TextField, Button, makeStyles } from \"@material-ui/core\";\nimport SnackBar from \"../common/SnackBar\";\nimport PostContext from \"../context/postContext\";\nimport UseForm from \"../hooks/useForm\";\nimport \"../index.less\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      marginBottom: theme.spacing(5),\n      marginTop: theme.spacing(5)\n    }\n  }\n}));\nexport default function PostForm() {\n  _s();\n\n  const {\n    addPost,\n    loading,\n    success\n  } = useContext(PostContext);\n  const [value, setValue] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const schema = Yup.object().shape({\n    title: Yup.string().min(5).max(255).required().label(\"Title\")\n  });\n\n  const handleSubmit = values => {\n    console.log(\"values submited\", values);\n    addPost({ ...values,\n      body: value\n    }, setOpen);\n  };\n\n  const values = {\n    title: \"\"\n  };\n  const formik = UseForm(values, schema, handleSubmit);\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        label: \"Title\",\n        value: formik.values.title,\n        onChange: formik.handleChange,\n        error: formik.touched.title && Boolean(formik.errors.title),\n        helperText: formik.touched.title && formik.errors.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: value,\n        onChange: setValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: loading ? \"Loading...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      err: formik.errors.title,\n      severity: formik.errors.title ? \"error\" : \"success\",\n      success: success,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"r9gzNT2qzXH2E84Uq5e+9ZC8o8w=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/PostForm.jsx"],"names":["React","useState","useContext","Yup","MDEditor","TextField","Button","makeStyles","SnackBar","PostContext","UseForm","useStyles","theme","root","marginBottom","spacing","marginTop","PostForm","addPost","loading","success","value","setValue","open","setOpen","schema","object","shape","title","string","min","max","required","label","handleSubmit","values","console","log","body","formik","classes","handleClose","event","reason","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { TextField, Button, makeStyles } from \"@material-ui/core\";\nimport SnackBar from \"../common/SnackBar\";\nimport PostContext from \"../context/postContext\";\nimport UseForm from \"../hooks/useForm\";\nimport \"../index.less\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      marginBottom: theme.spacing(5),\n      marginTop: theme.spacing(5),\n    },\n  },\n}));\n\nexport default function PostForm() {\n  const { addPost, loading, success } = useContext(PostContext);\n  const [value, setValue] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const schema = Yup.object().shape({\n    title: Yup.string().min(5).max(255).required().label(\"Title\"),\n  });\n\n  const handleSubmit = (values) => {\n    console.log(\"values submited\", values);\n\n    addPost({ ...values, body: value }, setOpen);\n  };\n\n  const values = { title: \"\" };\n\n  const formik = UseForm(values, schema, handleSubmit);\n\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return setOpen(false);\n  };\n\n  return (\n    <div className=\"content\">\n      <h1>Post Form</h1>\n      <form onSubmit={formik.handleSubmit} className={classes.root}>\n        <TextField\n          fullWidth\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          label=\"Title\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n          error={formik.touched.title && Boolean(formik.errors.title)}\n          helperText={formik.touched.title && formik.errors.title}\n        />\n        <MDEditor value={value} onChange={setValue} />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          {loading ? \"Loading...\" : \"Submit\"}\n        </Button>\n      </form>\n      <SnackBar\n        err={formik.errors.title}\n        severity={formik.errors.title ? \"error\" : \"success\"}\n        success={success}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}