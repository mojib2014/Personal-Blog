{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Snack from \"../common/Snack\";\nimport { authReducer, initialState } from \"../store/reducers/authReducer\";\nimport auth from \"../services/authService\";\nimport actionTypes from \"../store/actions/action_types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500\n    }\n  }\n}));\n\nconst LoginForm = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const classes = useStyles();\n  const schema = Yup.object().shape({\n    email: Yup.string().email().required().label(\"Email\"),\n    password: Yup.string().min(6).required().label(\"password\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      try {\n        dispatch({\n          type: actionTypes.LOADING\n        });\n        auth.login(values.email, values.password);\n        dispatch({\n          type: actionTypes.LOGIN\n        }); // const { state } = this.props.location;\n        // window.location = state ? state.from.pathname : \"/\";\n      } catch (err) {\n        return dispatch({\n          type: actionTypes.ERROR,\n          payload: err\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snack, {\n      error: state.error,\n      success: state.success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: classes.root,\n      style: {\n        width: \"500px\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.touched.email && Boolean(formik.errors.email),\n        required: true,\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.touched.password && Boolean(formik.errors.password),\n        required: true,\n        helperText: formik.touched.password && formik.errors.password,\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: state.loading ? \"loading...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"VBA6usGlB87BcyZAMUvH55N28dI=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/LoginForm.jsx"],"names":["React","useReducer","useFormik","Yup","TextField","Button","makeStyles","Snack","authReducer","initialState","auth","actionTypes","useStyles","theme","root","margin","spacing","width","LoginForm","state","dispatch","classes","schema","object","shape","email","string","required","label","password","min","formik","initialValues","validationSchema","onSubmit","values","type","LOADING","login","LOGIN","err","ERROR","payload","error","success","handleSubmit","handleChange","touched","Boolean","errors","loading"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Snack from \"../common/Snack\";\nimport { authReducer, initialState } from \"../store/reducers/authReducer\";\nimport auth from \"../services/authService\";\nimport actionTypes from \"../store/actions/action_types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 500,\n    },\n  },\n}));\n\nconst LoginForm = () => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const classes = useStyles();\n\n  const schema = Yup.object().shape({\n    email: Yup.string().email().required().label(\"Email\"),\n    password: Yup.string().min(6).required().label(\"password\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      try {\n        dispatch({ type: actionTypes.LOADING });\n        auth.login(values.email, values.password);\n        dispatch({ type: actionTypes.LOGIN });\n        // const { state } = this.props.location;\n        // window.location = state ? state.from.pathname : \"/\";\n      } catch (err) {\n        return dispatch({ type: actionTypes.ERROR, payload: err });\n      }\n    },\n  });\n\n  return (\n    <div className=\"content\">\n      <h1>Login Form</h1>\n      <Snack error={state.error} success={state.success} />\n      <form\n        onSubmit={formik.handleSubmit}\n        className={classes.root}\n        style={{ width: \"500px\", margin: \"auto\" }}\n      >\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          required\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          required\n          helperText={formik.touched.password && formik.errors.password}\n          autoComplete=\"current-password\"\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          {state.loading ? \"loading...\" : \"Login\"}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}