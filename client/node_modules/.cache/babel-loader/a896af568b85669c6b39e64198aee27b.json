{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CssBaseline, Typography } from \"@material-ui/core\";\nimport Posts from \"../components/Posts\";\nimport Layout from \"../common/Layout\";\nimport SnackBar from \"../common/SnackBar\";\nimport useSnackState from \"../hooks/useSnackState\";\nimport Loading from \"../common/Loading\";\nimport auth from \"../services/authService\";\nimport postActions from \"../actions/postActions\";\nimport postService from \"../services/postsService\";\nimport { PostContext } from \"../context/postContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [state, dispatch] = useContext(PostContext);\n  const [currentUser, setCurrentUser] = useState({});\n  const [open, handleClose, handleOpen] = useSnackState();\n  useEffect(() => {\n    getPosts();\n  }, []);\n  useEffect(() => {\n    if (state.error) handleOpen();\n    setCurrentUser(auth.getCurrentUser());\n  }, [state.error]);\n\n  const getPosts = async () => {\n    try {\n      dispatch(postActions.loading());\n      const {\n        data\n      } = await postService.getAllPosts();\n      dispatch(postActions.getPosts(data));\n    } catch (err) {\n      dispatch(postActions.error(err.response || err.message));\n    }\n  };\n\n  const handleLike = async item => {\n    if (item.liked) {\n      try {\n        console.log(\"in if block\");\n        dispatch(postActions.loading());\n        await postService.disLikePost(currentUser.id, item.id);\n      } catch (err) {\n        dispatch(postActions.error(err.response.data || err.message));\n      }\n    } else {\n      console.log(\"in else block\");\n\n      try {\n        dispatch(postActions.loading());\n        await postService.likePost(currentUser.id, item.id);\n      } catch (err) {\n        dispatch(postActions.error(err.response.data || err.message));\n      }\n    }\n  };\n\n  console.log(\"state: \", state.posts);\n  if (!state.success && state.loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 47\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"div\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Trending Posts in JavaScripit & JavaScript frameworks \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        items: state.posts,\n        onLike: handleLike,\n        liked: state.liked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), state.error && /*#__PURE__*/_jsxDEV(SnackBar, {\n      open: open,\n      severity: state.error ? \"error\" : \"success\",\n      err: state.error,\n      success: state.success,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"GxIOeiOCjJtHe1jDWlaeq+Plnag=\", false, function () {\n  return [useSnackState];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/pages/Home.jsx"],"names":["React","useContext","useEffect","useState","CssBaseline","Typography","Posts","Layout","SnackBar","useSnackState","Loading","auth","postActions","postService","PostContext","Home","state","dispatch","currentUser","setCurrentUser","open","handleClose","handleOpen","getPosts","error","getCurrentUser","loading","data","getAllPosts","err","response","message","handleLike","item","liked","console","log","disLikePost","id","likePost","posts","success"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { CssBaseline, Typography } from \"@material-ui/core\";\n\nimport Posts from \"../components/Posts\";\nimport Layout from \"../common/Layout\";\nimport SnackBar from \"../common/SnackBar\";\nimport useSnackState from \"../hooks/useSnackState\";\nimport Loading from \"../common/Loading\";\nimport auth from \"../services/authService\";\nimport postActions from \"../actions/postActions\";\nimport postService from \"../services/postsService\";\nimport { PostContext } from \"../context/postContext\";\n\nconst Home = () => {\n  const [state, dispatch] = useContext(PostContext);\n  const [currentUser, setCurrentUser] = useState({});\n  const [open, handleClose, handleOpen] = useSnackState();\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    if (state.error) handleOpen();\n    setCurrentUser(auth.getCurrentUser());\n  }, [state.error]);\n\n  const getPosts = async () => {\n    try {\n      dispatch(postActions.loading());\n\n      const { data } = await postService.getAllPosts();\n\n      dispatch(postActions.getPosts(data));\n    } catch (err) {\n      dispatch(postActions.error(err.response || err.message));\n    }\n  };\n\n  const handleLike = async (item) => {\n    if (item.liked) {\n      try {\n        console.log(\"in if block\");\n        dispatch(postActions.loading());\n\n        await postService.disLikePost(currentUser.id, item.id);\n      } catch (err) {\n        dispatch(postActions.error(err.response.data || err.message));\n      }\n    } else {\n      console.log(\"in else block\");\n      try {\n        dispatch(postActions.loading());\n\n        await postService.likePost(currentUser.id, item.id);\n      } catch (err) {\n        dispatch(postActions.error(err.response.data || err.message));\n      }\n    }\n  };\n\n  console.log(\"state: \", state.posts);\n\n  if (!state.success && state.loading) return <Loading />;\n  return (\n    <>\n      <CssBaseline />\n      <Layout>\n        <Typography component=\"div\" align=\"center\">\n          <h1>Trending Posts in JavaScripit & JavaScript frameworks </h1>\n        </Typography>\n        <Posts items={state.posts} onLike={handleLike} liked={state.liked} />\n      </Layout>\n      {state.error && (\n        <SnackBar\n          open={open}\n          severity={state.error ? \"error\" : \"success\"}\n          err={state.error}\n          success={state.success}\n          onClose={handleClose}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}