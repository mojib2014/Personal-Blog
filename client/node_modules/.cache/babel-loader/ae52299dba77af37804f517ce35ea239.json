{"ast":null,"code":"// import { useReducer } from \"react\";\n// import { initialState, userReducer } from \"../../reducers/userReducer\";\n// import UserContext from \"../userContext\";\n// import userService from \"../../services/usersService\";\n// import authService from \"../../services/authService\";\n// import userActions from \"../context/actions/userActions\";\n// const UserProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(userReducer, initialState);\n//   const registerUser = async (user) => {\n//     try {\n//       dispatch(userActions.loading);\n//       const { data } = await userService.registerUser(user);\n//       dispatch(userActions.addData(data));\n//     } catch (err) {\n//       dispatch(userActions.error(err.response.data || err.message));\n//     }\n//   };\n//   const getUserByEmail = async (email) => {\n//     try {\n//       dispatch(userActions.loading);\n//       const { data } = await userService.getUserByEmail(email);\n//       dispatch(userActions.getData(data));\n//     } catch (err) {\n//       dispatch(userActions.error(err.response.data || err.message));\n//     }\n//   };\n//   const getUserById = async (user_id) => {\n//     try {\n//       dispatch(userActions.loading());\n//       const { data } = await userService.getUserById(user_id);\n//       dispatch(userActions.getUserById(data));\n//     } catch (err) {\n//       dispatch(userActions.error(err.response.data || err.message));\n//     }\n//   };\n//   const getCurrentUser = () => {\n//     return authService.getCurrentUser();\n//   };\n//   return (\n//     <UserContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         success: state.success,\n//         error: state.error,\n//         register: registerUser,\n//         getUserByEmail,\n//         getCurrentUser,\n//         getUserById,\n//       }}\n//     >\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\n// export default UserProvider;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/providers/UserProvider.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { useReducer } from \"react\";\n// import { initialState, userReducer } from \"../../reducers/userReducer\";\n// import UserContext from \"../userContext\";\n// import userService from \"../../services/usersService\";\n// import authService from \"../../services/authService\";\n// import userActions from \"../context/actions/userActions\";\n\n// const UserProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(userReducer, initialState);\n\n//   const registerUser = async (user) => {\n//     try {\n//       dispatch(userActions.loading);\n\n//       const { data } = await userService.registerUser(user);\n\n//       dispatch(userActions.addData(data));\n//     } catch (err) {\n//       dispatch(userActions.error(err.response.data || err.message));\n//     }\n//   };\n\n//   const getUserByEmail = async (email) => {\n//     try {\n//       dispatch(userActions.loading);\n\n//       const { data } = await userService.getUserByEmail(email);\n\n//       dispatch(userActions.getData(data));\n//     } catch (err) {\n//       dispatch(userActions.error(err.response.data || err.message));\n//     }\n//   };\n\n//   const getUserById = async (user_id) => {\n//     try {\n//       dispatch(userActions.loading());\n\n//       const { data } = await userService.getUserById(user_id);\n\n//       dispatch(userActions.getUserById(data));\n//     } catch (err) {\n//       dispatch(userActions.error(err.response.data || err.message));\n//     }\n//   };\n\n//   const getCurrentUser = () => {\n//     return authService.getCurrentUser();\n//   };\n//   return (\n//     <UserContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         success: state.success,\n//         error: state.error,\n//         register: registerUser,\n//         getUserByEmail,\n//         getCurrentUser,\n//         getUserById,\n//       }}\n//     >\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\n\n// export default UserProvider;\n"]},"metadata":{},"sourceType":"module"}