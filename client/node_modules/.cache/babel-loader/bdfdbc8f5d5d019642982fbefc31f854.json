{"ast":null,"code":"// import { useEffect, useReducer } from \"react\";\n// import { postReducer, initialState } from \"../reducers/postReducer\";\n// import postService from \"../services/postsService\";\n// import postActions from \"../actions/postActions\";\n// import auth from \"../services/authService\";\n// export default function usePostsState() {\n//   const [state, dispatch] = useReducer(postReducer, initialState);\n//   useEffect(() => {\n//     getPosts();\n//   }, []);\n//   const getPosts = async () => {\n//     try {\n//       dispatch(postActions.loading());\n//       const { data } = await postService.getAllPosts();\n//       dispatch(postActions.getPosts(data));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response || err.message));\n//     }\n//   };\n//   const addPost = async (post) => {\n//     try {\n//       dispatch(postActions.loading());\n//       const user = await auth.getCurrentUser();\n//       post.author = user.id;\n//       const { data } = await postService.createPost(post);\n//       dispatch(postActions.addPost(data));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response.data || err.message));\n//     }\n//   };\n//   const handleLike = async (user_id, post_id) => {\n//     try {\n//       dispatch(postActions.loading());\n//       const { data } = await postService.likePost(user_id, post_id);\n//       dispatch(postActions.like(data));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response.data || err.message));\n//     }\n//   };\n//   const handleDisLike = async (user_id, post_id) => {\n//     try {\n//       dispatch(postActions.loading());\n//       const { data } = await postService.disLikePost(user_id, post_id);\n//       dispatch(postActions.disLike(data));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response.data || err.message));\n//     }\n//   };\n//   const setSelectedPost = (post) => {\n//     try {\n//       dispatch(postActions.loading());\n//       dispatch(postActions.setSelectedPost(post));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response.data || err.message));\n//     }\n//   };\n//   return [state, addPost, setSelectedPost, handleLike, handleDisLike];\n// }","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/hooks/usePostsState.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// import { useEffect, useReducer } from \"react\";\n// import { postReducer, initialState } from \"../reducers/postReducer\";\n// import postService from \"../services/postsService\";\n// import postActions from \"../actions/postActions\";\n// import auth from \"../services/authService\";\n\n// export default function usePostsState() {\n//   const [state, dispatch] = useReducer(postReducer, initialState);\n\n//   useEffect(() => {\n//     getPosts();\n//   }, []);\n\n//   const getPosts = async () => {\n//     try {\n//       dispatch(postActions.loading());\n\n//       const { data } = await postService.getAllPosts();\n\n//       dispatch(postActions.getPosts(data));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response || err.message));\n//     }\n//   };\n\n//   const addPost = async (post) => {\n//     try {\n//       dispatch(postActions.loading());\n\n//       const user = await auth.getCurrentUser();\n//       post.author = user.id;\n\n//       const { data } = await postService.createPost(post);\n\n//       dispatch(postActions.addPost(data));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response.data || err.message));\n//     }\n//   };\n\n//   const handleLike = async (user_id, post_id) => {\n//     try {\n//       dispatch(postActions.loading());\n\n//       const { data } = await postService.likePost(user_id, post_id);\n\n//       dispatch(postActions.like(data));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response.data || err.message));\n//     }\n//   };\n\n//   const handleDisLike = async (user_id, post_id) => {\n//     try {\n//       dispatch(postActions.loading());\n\n//       const { data } = await postService.disLikePost(user_id, post_id);\n\n//       dispatch(postActions.disLike(data));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response.data || err.message));\n//     }\n//   };\n\n//   const setSelectedPost = (post) => {\n//     try {\n//       dispatch(postActions.loading());\n\n//       dispatch(postActions.setSelectedPost(post));\n//     } catch (err) {\n//       dispatch(postActions.error(err.response.data || err.message));\n//     }\n//   };\n\n//   return [state, addPost, setSelectedPost, handleLike, handleDisLike];\n// }\n"]},"metadata":{},"sourceType":"module"}