{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/store/providers/UserProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useReducer } from \"react\";\nimport { initialState, userReducer } from \"../reducers/userReducer\";\nimport UserContext from \"../../context/userContext\";\nimport userService from \"../../services/usersService\";\nimport authService from \"../../services/authService\";\nimport actions from \"../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n    setOpen(false);\n  };\n\n  const registerUser = async user => {\n    try {\n      dispatch(actions.loading);\n      const {\n        data\n      } = await userService.registerUser(user);\n      return dispatch(actions.registerUser(data));\n    } catch (err) {\n      dispatch(actions.error(err.response));\n    }\n  };\n\n  const getUserByEmail = async email => {\n    try {\n      dispatch(actions.loading);\n      const {\n        data\n      } = await userService.getUserByEmail(email);\n      return dispatch(actions.getUserByEmail(data));\n    } catch (err) {\n      return dispatch(actions.error(err.response));\n    }\n  };\n\n  const getCurrentUser = () => {\n    return authService.getCurrentUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user: state.user,\n      loading: state.loading,\n      success: state.success,\n      error: state.error,\n      register: registerUser,\n      getUserByEmail,\n      getCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"9Ico5+8jxtEMkF7N0NwYac1tz2k=\");\n\n_c = UserProvider;\nexport default UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/store/providers/UserProvider.js"],"names":["useState","useReducer","initialState","userReducer","UserContext","userService","authService","actions","UserProvider","children","state","dispatch","open","setOpen","handleOpen","handleClose","event","reason","registerUser","user","loading","data","err","error","response","getUserByEmail","email","getCurrentUser","success","register"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,yBAA1C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACE,WAAD,EAAcD,YAAd,CAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMc,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAE5BJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAJD;;AAMA,QAAMK,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,QAAI;AACFR,MAAAA,QAAQ,CAACJ,OAAO,CAACa,OAAT,CAAR;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMhB,WAAW,CAACa,YAAZ,CAAyBC,IAAzB,CAAvB;AAEA,aAAOR,QAAQ,CAACJ,OAAO,CAACW,YAAR,CAAqBG,IAArB,CAAD,CAAf;AACD,KAND,CAME,OAAOC,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAACJ,OAAO,CAACgB,KAAR,CAAcD,GAAG,CAACE,QAAlB,CAAD,CAAR;AACD;AACF,GAVD;;AAYA,QAAMC,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACtC,QAAI;AACFf,MAAAA,QAAQ,CAACJ,OAAO,CAACa,OAAT,CAAR;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMhB,WAAW,CAACoB,cAAZ,CAA2BC,KAA3B,CAAvB;AAEA,aAAOf,QAAQ,CAACJ,OAAO,CAACkB,cAAR,CAAuBJ,IAAvB,CAAD,CAAf;AACD,KAND,CAME,OAAOC,GAAP,EAAY;AACZ,aAAOX,QAAQ,CAACJ,OAAO,CAACgB,KAAR,CAAcD,GAAG,CAACE,QAAlB,CAAD,CAAf;AACD;AACF,GAVD;;AAYA,QAAMG,cAAc,GAAG,MAAM;AAC3B,WAAOrB,WAAW,CAACqB,cAAZ,EAAP;AACD,GAFD;;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,IAAI,EAAET,KAAK,CAACS,IADP;AAELC,MAAAA,OAAO,EAAEV,KAAK,CAACU,OAFV;AAGLQ,MAAAA,OAAO,EAAElB,KAAK,CAACkB,OAHV;AAILL,MAAAA,KAAK,EAAEb,KAAK,CAACa,KAJR;AAKLM,MAAAA,QAAQ,EAAEX,YALL;AAMLO,MAAAA,cANK;AAOLE,MAAAA;AAPK,KADT;AAAA,cAWGlB;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxDD;;GAAMD,Y;;KAAAA,Y;AA0DN,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\nimport { useReducer } from \"react\";\nimport { initialState, userReducer } from \"../reducers/userReducer\";\nimport UserContext from \"../../context/userContext\";\nimport userService from \"../../services/usersService\";\nimport authService from \"../../services/authService\";\nimport actions from \"../actions/actions\";\n\nconst UserProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(userReducer, initialState);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n\n    setOpen(false);\n  };\n\n  const registerUser = async (user) => {\n    try {\n      dispatch(actions.loading);\n\n      const { data } = await userService.registerUser(user);\n\n      return dispatch(actions.registerUser(data));\n    } catch (err) {\n      dispatch(actions.error(err.response));\n    }\n  };\n\n  const getUserByEmail = async (email) => {\n    try {\n      dispatch(actions.loading);\n\n      const { data } = await userService.getUserByEmail(email);\n\n      return dispatch(actions.getUserByEmail(data));\n    } catch (err) {\n      return dispatch(actions.error(err.response));\n    }\n  };\n\n  const getCurrentUser = () => {\n    return authService.getCurrentUser();\n  };\n  return (\n    <UserContext.Provider\n      value={{\n        user: state.user,\n        loading: state.loading,\n        success: state.success,\n        error: state.error,\n        register: registerUser,\n        getUserByEmail,\n        getCurrentUser,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserProvider;\n"]},"metadata":{},"sourceType":"module"}