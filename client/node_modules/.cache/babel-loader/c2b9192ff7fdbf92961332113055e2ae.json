{"ast":null,"code":"import http from \"./httpService\";\nexport const createUser = async user => {\n  user.email_verified = false;\n\n  try {\n    return await http.post(\"/users/profile/create\", user);\n  } catch (err) {\n    console.log(\"user service: \", err.message);\n    return err;\n  }\n};\nexport const getUserByEmail = async email => {\n  try {\n    return await http.get(\"/users/profile\", {\n      params: email\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUserPosts = async user_id => {\n  try {\n    return await http.get(\"users/user/posts\", {\n      params: user_id\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUserProfileByUsername = async username => {\n  try {\n    return await http.get(\"/users/profile/username\", {\n      params: username\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getAuthorPosts = async username => {\n  try {\n    return await http.get(\"/users/author/posts\", {\n      params: username\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/services/usersService.js"],"names":["http","createUser","user","email_verified","post","err","console","log","message","getUserByEmail","email","get","params","getUserPosts","user_id","getUserProfileByUsername","username","getAuthorPosts"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACxCA,EAAAA,IAAI,CAACC,cAAL,GAAsB,KAAtB;;AACA,MAAI;AACF,WAAO,MAAMH,IAAI,CAACI,IAAL,CAAU,uBAAV,EAAmCF,IAAnC,CAAb;AACD,GAFD,CAEE,OAAOG,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAAG,CAACG,OAAlC;AACA,WAAOH,GAAP;AACD;AACF,CARM;AAUP,OAAO,MAAMI,cAAc,GAAG,MAAOC,KAAP,IAAiB;AAC7C,MAAI;AACF,WAAO,MAAMV,IAAI,CAACW,GAAL,CAAS,gBAAT,EAA2B;AAAEC,MAAAA,MAAM,EAAEF;AAAV,KAA3B,CAAb;AACD,GAFD,CAEE,OAAOL,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CANM;AAQP,OAAO,MAAMQ,YAAY,GAAG,MAAOC,OAAP,IAAmB;AAC7C,MAAI;AACF,WAAO,MAAMd,IAAI,CAACW,GAAL,CAAS,kBAAT,EAA6B;AAAEC,MAAAA,MAAM,EAAEE;AAAV,KAA7B,CAAb;AACD,GAFD,CAEE,OAAOT,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CANM;AAQP,OAAO,MAAMU,wBAAwB,GAAG,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF,WAAO,MAAMhB,IAAI,CAACW,GAAL,CAAS,yBAAT,EAAoC;AAAEC,MAAAA,MAAM,EAAEI;AAAV,KAApC,CAAb;AACD,GAFD,CAEE,OAAOX,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CANM;AAQP,OAAO,MAAMY,cAAc,GAAG,MAAOD,QAAP,IAAoB;AAChD,MAAI;AACF,WAAO,MAAMhB,IAAI,CAACW,GAAL,CAAS,qBAAT,EAAgC;AAAEC,MAAAA,MAAM,EAAEI;AAAV,KAAhC,CAAb;AACD,GAFD,CAEE,OAAOX,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CANM","sourcesContent":["import http from \"./httpService\";\n\nexport const createUser = async (user) => {\n  user.email_verified = false;\n  try {\n    return await http.post(\"/users/profile/create\", user);\n  } catch (err) {\n    console.log(\"user service: \", err.message);\n    return err;\n  }\n};\n\nexport const getUserByEmail = async (email) => {\n  try {\n    return await http.get(\"/users/profile\", { params: email });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserPosts = async (user_id) => {\n  try {\n    return await http.get(\"users/user/posts\", { params: user_id });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserProfileByUsername = async (username) => {\n  try {\n    return await http.get(\"/users/profile/username\", { params: username });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getAuthorPosts = async (username) => {\n  try {\n    return await http.get(\"/users/author/posts\", { params: username });\n  } catch (err) {\n    console.log(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}