{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/pages/PostDetails/PostDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { CssBaseline, Typography, Paper } from \"@material-ui/core\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport Layout from \"../../Layout/Layout\";\nimport SmallerContainer from \"../../common/SmallerContainer\";\nimport Alert from \"../../common/Alert\";\nimport useStyles from \"./styles\";\nimport { PostContext } from \"../../context/postContext\";\nimport Spiner from \"../../common/Spiner\";\nimport Like from \"../../common/Like\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostDetails = ({\n  match\n}) => {\n  _s();\n\n  const {\n    posts,\n    error,\n    loading,\n    getPosts,\n    handleLike\n  } = useContext(PostContext);\n  const classes = useStyles();\n  /* eslint-disable */\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  const selectedPost = posts.filter(post => post.id === +match.params.id)[0];\n  if (loading) return /*#__PURE__*/_jsxDEV(Spiner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    errMessage: error,\n    severity: error ? \"error\" : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"div\",\n        align: \"center\",\n        variant: \"h1\",\n        className: classes.title,\n        children: selectedPost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"div\",\n        align: \"center\",\n        variant: \"h5\",\n        className: classes.subTitle,\n        children: selectedPost.sub_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Like, {\n        item: selectedPost,\n        onLike: handleLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(SmallerContainer, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"body1\",\n            children: /*#__PURE__*/_jsxDEV(MDEditor.Markdown, {\n              source: selectedPost.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostDetails, \"0pFoC4UhpzQAHD9momHENaDAK94=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostDetails;\nexport default _c2 = /*#__PURE__*/React.memo(PostDetails);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostDetails\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/pages/PostDetails/PostDetails.jsx"],"names":["React","useContext","useEffect","CssBaseline","Typography","Paper","MDEditor","Layout","SmallerContainer","Alert","useStyles","PostContext","Spiner","Like","PostDetails","match","posts","error","loading","getPosts","handleLike","classes","selectedPost","filter","post","id","params","title","subTitle","sub_title","body","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,KAAlC,QAA+C,mBAA/C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACjC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA;AAAnC,MACJnB,UAAU,CAACU,WAAD,CADZ;AAEA,QAAMU,OAAO,GAAGX,SAAS,EAAzB;AAEA;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMG,YAAY,GAAGN,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAY,CAACV,KAAK,CAACW,MAAN,CAAaD,EAAjD,EAAqD,CAArD,CAArB;AAEA,MAAIP,OAAJ,EAAa,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,MAAID,KAAJ,EACE,oBAAO,QAAC,KAAD;AAAO,IAAA,UAAU,EAAEA,KAAnB;AAA0B,IAAA,QAAQ,EAAEA,KAAK,GAAG,OAAH,GAAa;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,YAAY,iBACX,QAAC,MAAD;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAC,IAHV;AAIE,QAAA,SAAS,EAAED,OAAO,CAACM,KAJrB;AAAA,kBAMGL,YAAY,CAACK;AANhB;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAC,IAHV;AAIE,QAAA,SAAS,EAAEN,OAAO,CAACO,QAJrB;AAAA,kBAMGN,YAAY,CAACO;AANhB;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEP,YAAZ;AAA0B,QAAA,MAAM,EAAEF;AAAlC;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE,QAAC,KAAD;AAAA,+BACE,QAAC,gBAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,KAAtB;AAA4B,YAAA,OAAO,EAAC,OAApC;AAAA,mCACE,QAAC,QAAD,CAAU,QAAV;AAAmB,cAAA,MAAM,EAAEE,YAAY,CAACQ;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADF;AAiCD,CAlDD;;GAAMhB,W;UAGYJ,S;;;KAHZI,W;AAoDN,kCAAed,KAAK,CAAC+B,IAAN,CAAWjB,WAAX,CAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { CssBaseline, Typography, Paper } from \"@material-ui/core\";\nimport MDEditor from \"@uiw/react-md-editor\";\n\nimport Layout from \"../../Layout/Layout\";\nimport SmallerContainer from \"../../common/SmallerContainer\";\nimport Alert from \"../../common/Alert\";\nimport useStyles from \"./styles\";\nimport { PostContext } from \"../../context/postContext\";\nimport Spiner from \"../../common/Spiner\";\nimport Like from \"../../common/Like\";\n\nconst PostDetails = ({ match }) => {\n  const { posts, error, loading, getPosts, handleLike } =\n    useContext(PostContext);\n  const classes = useStyles();\n\n  /* eslint-disable */\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const selectedPost = posts.filter((post) => post.id === +match.params.id)[0];\n\n  if (loading) return <Spiner />;\n\n  if (error)\n    return <Alert errMessage={error} severity={error ? \"error\" : null} />;\n\n  return (\n    <>\n      <CssBaseline />\n      {selectedPost && (\n        <Layout>\n          <Typography\n            component=\"div\"\n            align=\"center\"\n            variant=\"h1\"\n            className={classes.title}\n          >\n            {selectedPost.title}\n          </Typography>\n          <Typography\n            component=\"div\"\n            align=\"center\"\n            variant=\"h5\"\n            className={classes.subTitle}\n          >\n            {selectedPost.sub_title}\n          </Typography>\n          <Like item={selectedPost} onLike={handleLike} />\n          <Paper>\n            <SmallerContainer>\n              <Typography component=\"div\" variant=\"body1\">\n                <MDEditor.Markdown source={selectedPost.body} />\n              </Typography>\n            </SmallerContainer>\n          </Paper>\n        </Layout>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(PostDetails);\n"]},"metadata":{},"sourceType":"module"}