{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/AuthorPosts/AuthorPosts.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CssBaseline, Typography, Grid } from \"@material-ui/core\";\nimport Layout from \"../../common/Layout\";\nimport PostCard from \"../../common/Card/PostCard\";\nimport SnackBar from \"../../common/SnackBar\";\nimport useStyles from \"./styles\";\nimport useSnackState from \"../../hooks/useSnackState\";\nimport userService from \"../../services/usersService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AuthorPosts({\n  items,\n  error,\n  success\n}) {\n  _s();\n\n  const [open, handleClose] = useSnackState();\n  const classes = useStyles(); // if (!items.lenght) return <p>The author have no posts yet</p>;\n\n  const getAuthor = async id => {\n    return await userService.getUserById(id);\n  };\n\n  console.log(getAuthor(items[0]));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"div\",\n        align: \"center\",\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Posts by \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.gridContainer,\n        children: items.map(i => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          className: classes.gridItems,\n          children: /*#__PURE__*/_jsxDEV(PostCard, {\n            item: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, i.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(SnackBar, {\n      open: open,\n      severity: error ? \"error\" : \"success\",\n      err: error,\n      success: success,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AuthorPosts, \"0bBpfHpZ9oDrY7TRg+mOhKg7WEQ=\", false, function () {\n  return [useSnackState, useStyles];\n});\n\n_c = AuthorPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorPosts\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/AuthorPosts/AuthorPosts.jsx"],"names":["React","CssBaseline","Typography","Grid","Layout","PostCard","SnackBar","useStyles","useSnackState","userService","AuthorPosts","items","error","success","open","handleClose","classes","getAuthor","id","getUserById","console","log","title","gridContainer","map","i","gridItems"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAArB,EAAgD;AAAA;;AAC7D,QAAM,CAACC,IAAD,EAAOC,WAAP,IAAsBP,aAAa,EAAzC;AACA,QAAMQ,OAAO,GAAGT,SAAS,EAAzB,CAF6D,CAI7D;;AACA,QAAMU,SAAS,GAAG,MAAOC,EAAP,IAAc;AAC9B,WAAO,MAAMT,WAAW,CAACU,WAAZ,CAAwBD,EAAxB,CAAb;AACD,GAFD;;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAACN,KAAK,CAAC,CAAD,CAAN,CAArB;AACA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAC,QAAlC;AAA2C,QAAA,SAAS,EAAEK,OAAO,CAACM,KAA9D;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAEN,OAAO,CAACO,aAA/C;AAAA,kBACGZ,KAAK,CAACa,GAAN,CAAWC,CAAD,iBACT,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAA6B,UAAA,SAAS,EAAET,OAAO,CAACU,SAAhD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,WAAuBA,CAAC,CAACP,EAAzB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAcGN,KAAK,iBACJ,QAAC,QAAD;AACE,MAAA,IAAI,EAAEE,IADR;AAEE,MAAA,QAAQ,EAAEF,KAAK,GAAG,OAAH,GAAa,SAF9B;AAGE,MAAA,GAAG,EAAEA,KAHP;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,OAAO,EAAEE;AALX;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA,kBADF;AA0BD;;GAnCuBL,W;UACMF,a,EACZD,S;;;KAFMG,W","sourcesContent":["import React from \"react\";\nimport { CssBaseline, Typography, Grid } from \"@material-ui/core\";\n\nimport Layout from \"../../common/Layout\";\nimport PostCard from \"../../common/Card/PostCard\";\nimport SnackBar from \"../../common/SnackBar\";\nimport useStyles from \"./styles\";\nimport useSnackState from \"../../hooks/useSnackState\";\nimport userService from \"../../services/usersService\";\n\nexport default function AuthorPosts({ items, error, success }) {\n  const [open, handleClose] = useSnackState();\n  const classes = useStyles();\n\n  // if (!items.lenght) return <p>The author have no posts yet</p>;\n  const getAuthor = async (id) => {\n    return await userService.getUserById(id);\n  };\n  console.log(getAuthor(items[0]));\n  return (\n    <>\n      <CssBaseline />\n      <Layout>\n        <Typography component=\"div\" align=\"center\" className={classes.title}>\n          <h1>Posts by </h1>\n        </Typography>\n        <Grid container spacing={2} className={classes.gridContainer}>\n          {items.map((i) => (\n            <Grid item xs={3} key={i.id} className={classes.gridItems}>\n              <PostCard item={i} />\n            </Grid>\n          ))}\n        </Grid>\n      </Layout>\n      {error && (\n        <SnackBar\n          open={open}\n          severity={error ? \"error\" : \"success\"}\n          err={error}\n          success={success}\n          onClose={handleClose}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}