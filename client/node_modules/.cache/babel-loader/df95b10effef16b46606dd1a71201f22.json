{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\n\nconst UseForm = (values, schema, handleSubmit) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n  };\n\n  const formik = useFormik({\n    initialValues: values,\n    validationSchema: schema,\n    onSubmit: values => {\n      handleOpen(true);\n      handleSubmit(values);\n    }\n  });\n  return [formik, handleClose, open];\n};\n\n_s(UseForm, \"9q74HFATNsxItuiAKTv5BRNpOYo=\", false, function () {\n  return [useFormik];\n});\n\n_c = UseForm;\nexport default UseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/hooks/useForm.js"],"names":["useState","useFormik","UseForm","values","schema","handleSubmit","open","setOpen","handleOpen","handleClose","event","reason","formik","initialValues","validationSchema","onSubmit"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,YAAjB,KAAkC;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC7B,GAFD;;AAIA,QAAMC,MAAM,GAAGX,SAAS,CAAC;AACvBY,IAAAA,aAAa,EAAEV,MADQ;AAEvBW,IAAAA,gBAAgB,EAAEV,MAFK;AAGvBW,IAAAA,QAAQ,EAAGZ,MAAD,IAAY;AACpBK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAH,MAAAA,YAAY,CAACF,MAAD,CAAZ;AACD;AANsB,GAAD,CAAxB;AASA,SAAO,CAACS,MAAD,EAASH,WAAT,EAAsBH,IAAtB,CAAP;AACD,CArBD;;GAAMJ,O;UAWWD,S;;;KAXXC,O;AAuBN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport { useFormik } from \"formik\";\n\nconst UseForm = (values, schema, handleSubmit) => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n  };\n\n  const formik = useFormik({\n    initialValues: values,\n    validationSchema: schema,\n    onSubmit: (values) => {\n      handleOpen(true);\n      handleSubmit(values);\n    },\n  });\n\n  return [formik, handleClose, open];\n};\n\nexport default UseForm;\n"]},"metadata":{},"sourceType":"module"}