{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport SnackBar from \"../common/SnackBar\";\nimport { authReducer, initialState } from \"../store/reducers/authReducer\";\nimport auth from \"../services/authService\";\nimport actionTypes from \"../store/actions/action_types\";\nimport history from \"../utils/history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      marginBottom: theme.spacing(1)\n    }\n  }\n}));\n\nconst LoginForm = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const classes = useStyles();\n  const schema = Yup.object().shape({\n    email: Yup.string().email().required().label(\"Email\"),\n    password: Yup.string().min(6).required().label(\"password\")\n  });\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const formik = useFormik({\n    validationSchema: schema,\n    onSubmit: async values => {\n      try {\n        setLoading(true);\n        dispatch({\n          type: actionTypes.LOADING\n        });\n        await auth.login(values.email, values.password);\n        if (auth.getCurrentUser()) setLoading(false);\n        history.replace(\"/\"); // const { state } = props.location;\n        // window.location = state ? state.from.pathname : \"/\";\n      } catch (err) {\n        dispatch({\n          type: actionTypes.ERROR,\n          payload: err\n        });\n      }\n    }\n  });\n  if (auth.getCurrentUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-title\",\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: classes.root,\n        style: {\n          width: \"500px\",\n          margin: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"email\",\n          name: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          required: true,\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          required: true,\n          helperText: formik.touched.password && formik.errors.password,\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          type: \"submit\",\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\",\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      err: state.error,\n      success: state.success,\n      open: open,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"owdiq72+/IFod6gtUrMhlff/9KU=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/components/LoginForm.jsx"],"names":["React","useReducer","useState","useFormik","Yup","TextField","Button","CircularProgress","makeStyles","Redirect","SnackBar","authReducer","initialState","auth","actionTypes","history","useStyles","theme","root","marginBottom","spacing","LoginForm","loading","setLoading","state","dispatch","classes","schema","object","shape","email","string","required","label","password","min","initialValues","formik","validationSchema","onSubmit","values","type","LOADING","login","getCurrentUser","replace","err","ERROR","payload","handleSubmit","width","margin","handleChange","touched","Boolean","errors","error","success","open","onClose"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  TextField,\n  Button,\n  CircularProgress,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport SnackBar from \"../common/SnackBar\";\nimport { authReducer, initialState } from \"../store/reducers/authReducer\";\nimport auth from \"../services/authService\";\nimport actionTypes from \"../store/actions/action_types\";\nimport history from \"../utils/history\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nconst LoginForm = () => {\n  const [loading, setLoading] = useState(false);\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const classes = useStyles();\n\n  const schema = Yup.object().shape({\n    email: Yup.string().email().required().label(\"Email\"),\n    password: Yup.string().min(6).required().label(\"password\"),\n  });\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const formik = useFormik({\n    validationSchema: schema,\n    onSubmit: async (values) => {\n      try {\n        setLoading(true);\n        dispatch({ type: actionTypes.LOADING });\n\n        await auth.login(values.email, values.password);\n\n        if (auth.getCurrentUser()) setLoading(false);\n        history.replace(\"/\");\n        // const { state } = props.location;\n        // window.location = state ? state.from.pathname : \"/\";\n      } catch (err) {\n        dispatch({ type: actionTypes.ERROR, payload: err });\n      }\n    },\n  });\n\n  if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"content\">\n      <h1 className=\"form-title\">Login Form</h1>\n      <div className=\"form-content\">\n        <form\n          onSubmit={formik.handleSubmit}\n          className={classes.root}\n          style={{ width: \"500px\", margin: \"auto\" }}\n        >\n          <TextField\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            required\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            fullWidth\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            required\n            helperText={formik.touched.password && formik.errors.password}\n            autoComplete=\"current-password\"\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            {loading ? (\n              <CircularProgress color=\"secondary\" size={25} />\n            ) : (\n              \"Login\"\n            )}\n          </Button>\n        </form>\n      </div>\n      <SnackBar\n        err={state.error}\n        success={state.success}\n        open={open}\n        onClose={onClose}\n      />\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}