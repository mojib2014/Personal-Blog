{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from \"react\";\nimport { postReducer, initialState } from \"../reducers/postReducer\";\nimport postService from \"../services/postsService\";\nimport actions from \"../store/actions/actions\";\nimport auth from \"../services/authService\";\nexport default function usePostsState() {\n  _s();\n\n  const [state, dispatch] = useReducer(postReducer, initialState);\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const getPosts = async () => {\n    try {\n      dispatch(actions.loading());\n      const {\n        data\n      } = await postService.getAllPosts();\n      dispatch(actions.getPosts(data));\n    } catch (err) {\n      console.log(\"catch error :\", err.response);\n      dispatch(actions.error(err.response || err.message || err.statusText));\n    }\n  };\n\n  const addPost = async post => {\n    try {\n      dispatch(actions.loading());\n      const user = await auth.getCurrentUser();\n      post.author = user.id;\n      const {\n        data\n      } = await postService.createPost(post);\n      dispatch(actions.addPost(data));\n    } catch (err) {\n      dispatch(actions.error(err.response.data || err.message));\n    }\n  };\n\n  return [state, addPost];\n}\n\n_s(usePostsState, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/hooks/usePostsState.js"],"names":["useEffect","useReducer","postReducer","initialState","postService","actions","auth","usePostsState","state","dispatch","getPosts","loading","data","getAllPosts","err","console","log","response","error","message","statusText","addPost","post","user","getCurrentUser","author","id","createPost"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,yBAA1C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACC,WAAD,EAAcC,YAAd,CAApC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACFD,MAAAA,QAAQ,CAACJ,OAAO,CAACM,OAAR,EAAD,CAAR;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,WAAW,CAACS,WAAZ,EAAvB;AAEAJ,MAAAA,QAAQ,CAACJ,OAAO,CAACK,QAAR,CAAiBE,IAAjB,CAAD,CAAR;AACD,KAND,CAME,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAAG,CAACG,QAAjC;AACAR,MAAAA,QAAQ,CAACJ,OAAO,CAACa,KAAR,CAAcJ,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACK,OAApB,IAA+BL,GAAG,CAACM,UAAjD,CAAD,CAAR;AACD;AACF,GAXD;;AAaA,QAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9B,QAAI;AACFb,MAAAA,QAAQ,CAACJ,OAAO,CAACM,OAAR,EAAD,CAAR;AAEA,YAAMY,IAAI,GAAG,MAAMjB,IAAI,CAACkB,cAAL,EAAnB;AACAF,MAAAA,IAAI,CAACG,MAAL,GAAcF,IAAI,CAACG,EAAnB;AAEA,YAAM;AAAEd,QAAAA;AAAF,UAAW,MAAMR,WAAW,CAACuB,UAAZ,CAAuBL,IAAvB,CAAvB;AAEAb,MAAAA,QAAQ,CAACJ,OAAO,CAACgB,OAAR,CAAgBT,IAAhB,CAAD,CAAR;AACD,KATD,CASE,OAAOE,GAAP,EAAY;AACZL,MAAAA,QAAQ,CAACJ,OAAO,CAACa,KAAR,CAAcJ,GAAG,CAACG,QAAJ,CAAaL,IAAb,IAAqBE,GAAG,CAACK,OAAvC,CAAD,CAAR;AACD;AACF,GAbD;;AAeA,SAAO,CAACX,KAAD,EAAQa,OAAR,CAAP;AACD;;GApCuBd,a","sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport { postReducer, initialState } from \"../reducers/postReducer\";\nimport postService from \"../services/postsService\";\nimport actions from \"../store/actions/actions\";\nimport auth from \"../services/authService\";\n\nexport default function usePostsState() {\n  const [state, dispatch] = useReducer(postReducer, initialState);\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const getPosts = async () => {\n    try {\n      dispatch(actions.loading());\n\n      const { data } = await postService.getAllPosts();\n\n      dispatch(actions.getPosts(data));\n    } catch (err) {\n      console.log(\"catch error :\", err.response);\n      dispatch(actions.error(err.response || err.message || err.statusText));\n    }\n  };\n\n  const addPost = async (post) => {\n    try {\n      dispatch(actions.loading());\n\n      const user = await auth.getCurrentUser();\n      post.author = user.id;\n\n      const { data } = await postService.createPost(post);\n\n      dispatch(actions.addPost(data));\n    } catch (err) {\n      dispatch(actions.error(err.response.data || err.message));\n    }\n  };\n\n  return [state, addPost];\n}\n"]},"metadata":{},"sourceType":"module"}