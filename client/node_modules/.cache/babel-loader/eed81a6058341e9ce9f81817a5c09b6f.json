{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/context/providers/PostProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useState, useEffect } from \"react\";\nimport { PostContext } from \"../postContext\";\nimport { postReducer, initialState } from \"../reducers/postReducer\";\nimport actions from \"../actions/actions\";\nimport postService from \"../../services/postsService\";\nimport auth from \"../../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostProvider = ({\n  children\n}) => {\n  _s();\n\n  const [{\n    posts,\n    selectedPost,\n    loading,\n    success,\n    error\n  }, dispatch] = useReducer(postReducer, initialState);\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, [currentUser]);\n\n  const getPosts = async () => {\n    try {\n      dispatch(actions.loading());\n      const {\n        data\n      } = await postService.getAllPosts();\n      dispatch(actions.getPosts(data));\n    } catch (err) {\n      dispatch(actions.error(err.response || err.message));\n    }\n  };\n\n  const handleLike = async item => {\n    if (item.liked) {\n      try {\n        console.log(\"in if block\");\n        dispatch(actions.loading());\n        await postService.disLikePost(currentUser.id, item.id);\n      } catch (err) {\n        dispatch(actions.error(err.response.data || err.message));\n      }\n    } else {\n      console.log(\"in else block\");\n\n      try {\n        dispatch(actions.loading());\n        await postService.likePost(currentUser.id, item.id);\n      } catch (err) {\n        dispatch(actions.error(err.response.data || err.message));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: {\n      posts,\n      selectedPost,\n      loading,\n      success,\n      error,\n      getPosts,\n      handleLike\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostProvider, \"FM6j8+cAGCZzj79+R2wd+b8ZruI=\");\n\n_c = PostProvider;\nexport default PostProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/context/providers/PostProvider.js"],"names":["useReducer","useState","useEffect","PostContext","postReducer","initialState","actions","postService","auth","PostProvider","children","posts","selectedPost","loading","success","error","dispatch","currentUser","setCurrentUser","getCurrentUser","getPosts","data","getAllPosts","err","response","message","handleLike","item","liked","console","log","disLikePost","id","likePost"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,yBAA1C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA;AAAzC,GAAD,EAAmDC,QAAnD,IACJhB,UAAU,CAACI,WAAD,EAAcC,YAAd,CADZ;AAEA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,cAAc,CAACV,IAAI,CAACW,cAAL,EAAD,CAAd;AACD,GAFQ,EAEN,CAACF,WAAD,CAFM,CAAT;;AAIA,QAAMG,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACFJ,MAAAA,QAAQ,CAACV,OAAO,CAACO,OAAR,EAAD,CAAR;AAEA,YAAM;AAAEQ,QAAAA;AAAF,UAAW,MAAMd,WAAW,CAACe,WAAZ,EAAvB;AAEAN,MAAAA,QAAQ,CAACV,OAAO,CAACc,QAAR,CAAiBC,IAAjB,CAAD,CAAR;AACD,KAND,CAME,OAAOE,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAACV,OAAO,CAACS,KAAR,CAAcQ,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACE,OAAlC,CAAD,CAAR;AACD;AACF,GAVD;;AAYA,QAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAd,QAAAA,QAAQ,CAACV,OAAO,CAACO,OAAR,EAAD,CAAR;AAEA,cAAMN,WAAW,CAACwB,WAAZ,CAAwBd,WAAW,CAACe,EAApC,EAAwCL,IAAI,CAACK,EAA7C,CAAN;AACD,OALD,CAKE,OAAOT,GAAP,EAAY;AACZP,QAAAA,QAAQ,CAACV,OAAO,CAACS,KAAR,CAAcQ,GAAG,CAACC,QAAJ,CAAaH,IAAb,IAAqBE,GAAG,CAACE,OAAvC,CAAD,CAAR;AACD;AACF,KATD,MASO;AACLI,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,UAAI;AACFd,QAAAA,QAAQ,CAACV,OAAO,CAACO,OAAR,EAAD,CAAR;AAEA,cAAMN,WAAW,CAAC0B,QAAZ,CAAqBhB,WAAW,CAACe,EAAjC,EAAqCL,IAAI,CAACK,EAA1C,CAAN;AACD,OAJD,CAIE,OAAOT,GAAP,EAAY;AACZP,QAAAA,QAAQ,CAACV,OAAO,CAACS,KAAR,CAAcQ,GAAG,CAACC,QAAJ,CAAaH,IAAb,IAAqBE,GAAG,CAACE,OAAvC,CAAD,CAAR;AACD;AACF;AACF,GApBD;;AAsBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLd,MAAAA,KADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA,OAHK;AAILC,MAAAA,OAJK;AAKLC,MAAAA,KALK;AAMLK,MAAAA,QANK;AAOLM,MAAAA;AAPK,KADT;AAAA,cAWGhB;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1DD;;GAAMD,Y;;KAAAA,Y;AA4DN,eAAeA,YAAf","sourcesContent":["import { useReducer, useState, useEffect } from \"react\";\nimport { PostContext } from \"../postContext\";\nimport { postReducer, initialState } from \"../reducers/postReducer\";\nimport actions from \"../actions/actions\";\nimport postService from \"../../services/postsService\";\nimport auth from \"../../services/authService\";\n\nconst PostProvider = ({ children }) => {\n  const [{ posts, selectedPost, loading, success, error }, dispatch] =\n    useReducer(postReducer, initialState);\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    setCurrentUser(auth.getCurrentUser());\n  }, [currentUser]);\n\n  const getPosts = async () => {\n    try {\n      dispatch(actions.loading());\n\n      const { data } = await postService.getAllPosts();\n\n      dispatch(actions.getPosts(data));\n    } catch (err) {\n      dispatch(actions.error(err.response || err.message));\n    }\n  };\n\n  const handleLike = async (item) => {\n    if (item.liked) {\n      try {\n        console.log(\"in if block\");\n        dispatch(actions.loading());\n\n        await postService.disLikePost(currentUser.id, item.id);\n      } catch (err) {\n        dispatch(actions.error(err.response.data || err.message));\n      }\n    } else {\n      console.log(\"in else block\");\n      try {\n        dispatch(actions.loading());\n\n        await postService.likePost(currentUser.id, item.id);\n      } catch (err) {\n        dispatch(actions.error(err.response.data || err.message));\n      }\n    }\n  };\n\n  return (\n    <PostContext.Provider\n      value={{\n        posts,\n        selectedPost,\n        loading,\n        success,\n        error,\n        getPosts,\n        handleLike,\n      }}\n    >\n      {children}\n    </PostContext.Provider>\n  );\n};\n\nexport default PostProvider;\n"]},"metadata":{},"sourceType":"module"}