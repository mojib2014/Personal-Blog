{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/store/providers/UserProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { initialState, userReducer } from \"../reducers/userReducer\";\nimport UserContext from \"../../context/userContext\";\nimport userService from \"../../services/usersService\";\nimport authService from \"../../services/authService\";\nimport actionTypes from \"../actions/action_types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  const registerUser = async user => {\n    try {\n      dispatch({\n        type: actionTypes.LOADING\n      });\n      const {\n        data\n      } = await userService.registerUser(user);\n      console.log(\"user provider\", data);\n      if (data.name === \"error\" || data.status) return dispatch({\n        type: actionTypes.ERROR,\n        payload: data\n      });\n      return dispatch({\n        type: actionTypes.REGISTER,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: actionTypes.ERROR,\n        payload: err\n      });\n    }\n  };\n\n  const getUserByEmail = async email => {\n    try {\n      dispatch({\n        type: actionTypes.LOADING\n      });\n      const {\n        data\n      } = await userService.getUserByEmail(email);\n      if (data.name === \"error\") return dispatch({\n        type: actionTypes.ERROR,\n        payload: data\n      });\n      return dispatch({\n        type: actionTypes.GET_USER_BY_EMAIL,\n        payload: data\n      });\n    } catch (err) {\n      return err.response;\n    }\n  };\n\n  const getCurrentUser = () => {\n    return authService.getCurrentUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user: state.user,\n      loading: state.loading,\n      success: state.success,\n      error: state.error,\n      register: registerUser,\n      getUserByEmail,\n      getCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = UserProvider;\nexport default UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/node_projects/blog/client/src/store/providers/UserProvider.js"],"names":["useReducer","initialState","userReducer","UserContext","userService","authService","actionTypes","UserProvider","children","state","dispatch","registerUser","user","type","LOADING","data","console","log","name","status","ERROR","payload","REGISTER","err","getUserByEmail","email","GET_USER_BY_EMAIL","response","getCurrentUser","loading","success","error","register"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,yBAA1C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACE,WAAD,EAAcD,YAAd,CAApC;;AAEA,QAAMU,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,QAAI;AACFF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACQ;AAApB,OAAD,CAAR;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMX,WAAW,CAACO,YAAZ,CAAyBC,IAAzB,CAAvB;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACA,UAAIA,IAAI,CAACG,IAAL,KAAc,OAAd,IAAyBH,IAAI,CAACI,MAAlC,EACE,OAAOT,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACc,KAApB;AAA2BC,QAAAA,OAAO,EAAEN;AAApC,OAAD,CAAf;AAEF,aAAOL,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACgB,QAApB;AAA8BD,QAAAA,OAAO,EAAEN;AAAvC,OAAD,CAAf;AACD,KAVD,CAUE,OAAOQ,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACc,KAApB;AAA2BC,QAAAA,OAAO,EAAEE;AAApC,OAAD,CAAR;AACD;AACF,GAdD;;AAgBA,QAAMC,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACtC,QAAI;AACFf,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACQ;AAApB,OAAD,CAAR;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMX,WAAW,CAACoB,cAAZ,CAA2BC,KAA3B,CAAvB;AAEA,UAAIV,IAAI,CAACG,IAAL,KAAc,OAAlB,EACE,OAAOR,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACc,KAApB;AAA2BC,QAAAA,OAAO,EAAEN;AAApC,OAAD,CAAf;AAEF,aAAOL,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,WAAW,CAACoB,iBAApB;AAAuCL,QAAAA,OAAO,EAAEN;AAAhD,OAAD,CAAf;AACD,KARD,CAQE,OAAOQ,GAAP,EAAY;AACZ,aAAOA,GAAG,CAACI,QAAX;AACD;AACF,GAZD;;AAcA,QAAMC,cAAc,GAAG,MAAM;AAC3B,WAAOvB,WAAW,CAACuB,cAAZ,EAAP;AACD,GAFD;;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLhB,MAAAA,IAAI,EAAEH,KAAK,CAACG,IADP;AAELiB,MAAAA,OAAO,EAAEpB,KAAK,CAACoB,OAFV;AAGLC,MAAAA,OAAO,EAAErB,KAAK,CAACqB,OAHV;AAILC,MAAAA,KAAK,EAAEtB,KAAK,CAACsB,KAJR;AAKLC,MAAAA,QAAQ,EAAErB,YALL;AAMLa,MAAAA,cANK;AAOLI,MAAAA;AAPK,KADT;AAAA,cAWGpB;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnDD;;GAAMD,Y;;KAAAA,Y;AAqDN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport { initialState, userReducer } from \"../reducers/userReducer\";\nimport UserContext from \"../../context/userContext\";\nimport userService from \"../../services/usersService\";\nimport authService from \"../../services/authService\";\nimport actionTypes from \"../actions/action_types\";\n\nconst UserProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  const registerUser = async (user) => {\n    try {\n      dispatch({ type: actionTypes.LOADING });\n\n      const { data } = await userService.registerUser(user);\n\n      console.log(\"user provider\", data);\n      if (data.name === \"error\" || data.status)\n        return dispatch({ type: actionTypes.ERROR, payload: data });\n\n      return dispatch({ type: actionTypes.REGISTER, payload: data });\n    } catch (err) {\n      dispatch({ type: actionTypes.ERROR, payload: err });\n    }\n  };\n\n  const getUserByEmail = async (email) => {\n    try {\n      dispatch({ type: actionTypes.LOADING });\n      const { data } = await userService.getUserByEmail(email);\n\n      if (data.name === \"error\")\n        return dispatch({ type: actionTypes.ERROR, payload: data });\n\n      return dispatch({ type: actionTypes.GET_USER_BY_EMAIL, payload: data });\n    } catch (err) {\n      return err.response;\n    }\n  };\n\n  const getCurrentUser = () => {\n    return authService.getCurrentUser();\n  };\n  return (\n    <UserContext.Provider\n      value={{\n        user: state.user,\n        loading: state.loading,\n        success: state.success,\n        error: state.error,\n        register: registerUser,\n        getUserByEmail,\n        getCurrentUser,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserProvider;\n"]},"metadata":{},"sourceType":"module"}